"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.run = exports.define = void 0;

var _pandaParchment = require("panda-parchment");

var _pandaGenerics = require("panda-generics");

var _safe = require("colors/safe");

var define,
    lookup,
    run,
    tasks,
    indexOf = [].indexOf;
exports.run = run;
exports.define = define;
tasks = {};

lookup = function (name) {
  return tasks[name];
};

exports.define = define = _pandaGenerics.Method.create({
  description: "Define a task."
});

_pandaGenerics.Method.define(define, _pandaParchment.isString, _pandaParchment.isArray, _pandaParchment.isFunction, function (name, dependencies, action) {
  return tasks[name] = {
    dependencies,
    action
  };
});

_pandaGenerics.Method.define(define, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isFunction, function (name, dependencies, action) {
  return define(name, dependencies.split(/\s/), action);
});

_pandaGenerics.Method.define(define, _pandaParchment.isString, _pandaParchment.isDefined, function (name, dependences) {
  return define(name, dependences, function () {});
});

_pandaGenerics.Method.define(define, _pandaParchment.isString, _pandaParchment.isFunction, function (name, action) {
  return define(name, [], action);
});

exports.run = run = async function (name = "default", visited = []) {
  var action, background, dependencies, dependency, finish, flag, i, len, result, start, task;
  flag = name.slice(-1);

  if (flag === "&") {
    background = true;
    name = name.slice(0, -1);
  }

  if (indexOf.call(visited, name) < 0) {
    console.error(`p9k: Starting ${(0, _safe.green)(name)} ...`);
    visited.push(name);

    if ((task = lookup(name)) != null) {
      ({
        dependencies,
        action
      } = task);

      for (i = 0, len = dependencies.length; i < len; i++) {
        dependency = dependencies[i];
        await run(dependency, visited);
      }

      start = (0, _pandaParchment.microseconds)();

      finish = function () {
        var duration;
        finish = (0, _pandaParchment.microseconds)();
        duration = Math.round((finish - start) / 1000);
        return console.error(`p9k: Finished ${(0, _safe.green)(name)} in ${(0, _safe.magenta)(duration)}ms.`);
      };

      result = action();

      if (background) {
        if ((result != null ? result.then : void 0) != null) {
          return result.then(finish);
        } else {
          return finish();
        }
      } else {
        await result;
        return finish();
      }
    } else {
      return console.error((0, _safe.red)(`p9k: task ${(0, _safe.green)(name)} not found.`));
    }
  }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtOTAwMC9zcmMvdGFzay5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUdBOztBQUNBOztBQUpBLElBQUEsTUFBQTtBQUFBLElBQUEsTUFBQTtBQUFBLElBQUEsR0FBQTtBQUFBLElBQUEsS0FBQTtBQUFBLElBQUEsT0FBQSxHQUFBLEdBQUEsT0FBQTs7O0FBTUEsS0FBQSxHQUFRLEVBQVI7O0FBQ0EsTUFBQSxHQUFTLFVBQUEsSUFBQSxFQUFBO1NBQVUsS0FBTSxDQUFBLElBQUEsQztBQUFoQixDQUFUOztBQUVBLGlCQUFBLE1BQUEsR0FBUyxzQkFBQSxNQUFBLENBQ1A7QUFBQSxFQUFBLFdBQUEsRUFBYTtBQUFiLENBRE8sQ0FBVDs7QUFHQSxzQkFBQSxNQUFBLENBQUEsTUFBQSxFQUFBLHdCQUFBLEVBQUEsdUJBQUEsRUFBQSwwQkFBQSxFQUNFLFVBQUEsSUFBQSxFQUFBLFlBQUEsRUFBQSxNQUFBLEVBQUE7U0FDRSxLQUFNLENBQU4sSUFBTSxDQUFOLEdBQWM7QUFBQSxJQUFBLFlBQUE7QUFBQSxJQUFBO0FBQUEsRztBQUZsQixDQUFBOztBQUlBLHNCQUFBLE1BQUEsQ0FBQSxNQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUFBLDBCQUFBLEVBQ0UsVUFBQSxJQUFBLEVBQUEsWUFBQSxFQUFBLE1BQUEsRUFBQTtTQUNFLE1BQUEsQ0FBQSxJQUFBLEVBQWMsWUFBWSxDQUFaLEtBQUEsQ0FBZCxJQUFjLENBQWQsRUFBQSxNQUFBLEM7QUFGSixDQUFBOztBQUlBLHNCQUFBLE1BQUEsQ0FBQSxNQUFBLEVBQUEsd0JBQUEsRUFBQSx5QkFBQSxFQUNFLFVBQUEsSUFBQSxFQUFBLFdBQUEsRUFBQTtTQUF1QixNQUFBLENBQUEsSUFBQSxFQUFBLFdBQUEsRUFBMEIsWUFBQSxDQUExQixDQUFBLEM7QUFEekIsQ0FBQTs7QUFHQSxzQkFBQSxNQUFBLENBQUEsTUFBQSxFQUFBLHdCQUFBLEVBQUEsMEJBQUEsRUFDRSxVQUFBLElBQUEsRUFBQSxNQUFBLEVBQUE7U0FBa0IsTUFBQSxDQUFBLElBQUEsRUFBQSxFQUFBLEVBQUEsTUFBQSxDO0FBRHBCLENBQUE7O0FBSUEsY0FBQSxHQUFBLEdBQU0sZ0JBQUMsSUFBQSxHQUFELFNBQUEsRUFBbUIsT0FBQSxHQUFuQixFQUFBLEVBQUE7QUFFSixNQUFBLE1BQUEsRUFBQSxVQUFBLEVBQUEsWUFBQSxFQUFBLFVBQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsTUFBQSxFQUFBLEtBQUEsRUFBQSxJQUFBO0FBQUEsRUFBQSxJQUFBLEdBQU8sSUFBSyxDQUFBLEtBQUwsQ0FBSyxDQUFBLENBQUwsQ0FBUDs7QUFDQSxNQUFHLElBQUEsS0FBSCxHQUFBLEVBQUE7QUFDRSxJQUFBLFVBQUEsR0FBYSxJQUFiO0FBQ0EsSUFBQSxJQUFBLEdBQU8sSUFBSyxDQUFBLEtBQUwsQ0FBSyxDQUFMLEVBQUssQ0FGZCxDQUVTLENBQVA7OztBQUVGLE1BQU8sT0FBQSxDQUFBLElBQUEsQ0FBQSxPQUFBLEVBQUEsSUFBQSxJQUFQLENBQUEsRUFBQTtBQUVFLElBQUEsT0FBTyxDQUFQLEtBQUEsQ0FBYyxpQkFBaUIsaUJBQWpCLElBQWlCLENBQS9CLE1BQUE7QUFFQSxJQUFBLE9BQU8sQ0FBUCxJQUFBLENBQUEsSUFBQTs7QUFFQSxRQUFHLENBQUEsSUFBQSxHQUFBLE1BQUEsQ0FBQSxJQUFBLENBQUEsS0FBSCxJQUFBLEVBQUE7QUFDRSxPQUFBO0FBQUEsUUFBQSxZQUFBO0FBQUEsUUFBQTtBQUFBLFVBQUEsSUFBQTs7QUFFQSxXQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsR0FBQSxHQUFBLFlBQUEsQ0FBQSxNQUFBLEVBQUEsQ0FBQSxHQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsRUFBQTs7QUFDRSxjQUFNLEdBQUEsQ0FBQSxVQUFBLEVBQUEsT0FBQSxDQUFOO0FBREY7O0FBR0EsTUFBQSxLQUFBLEdBQVEsbUNBQVI7O0FBRUEsTUFBQSxNQUFBLEdBQVMsWUFBQTtBQUNQLFlBQUEsUUFBQTtBQUFBLFFBQUEsTUFBQSxHQUFTLG1DQUFUO0FBQ0EsUUFBQSxRQUFBLEdBQVcsSUFBSSxDQUFKLEtBQUEsQ0FBVyxDQUFDLE1BQUEsR0FBRCxLQUFBLElBQVgsSUFBQSxDQUFYO2VBQ0EsT0FBTyxDQUFQLEtBQUEsQ0FBYyxpQkFBaUIsaUJBQWpCLElBQWlCLENBQWpCLE9BQWtDLG1CQUFsQyxRQUFrQyxDQUFoRCxLQUFBLEM7QUFITyxPQUFUOztBQUtBLE1BQUEsTUFBQSxHQUFTLE1BQUEsRUFBVDs7QUFFQSxVQUFBLFVBQUEsRUFBQTtBQUNFLFlBQUcsQ0FBQSxNQUFBLElBQUEsSUFBQSxHQUFBLE1BQUEsQ0FBQSxJQUFBLEdBQUEsS0FBQSxDQUFBLEtBQUgsSUFBQSxFQUFBO2lCQUNFLE1BQU0sQ0FBTixJQUFBLENBREYsTUFDRSxDO0FBREYsU0FBQSxNQUFBO2lCQUdFLE1BSEYsRTtBQURGO0FBQUEsT0FBQSxNQUFBO0FBTUUsY0FBTSxNQUFOO2VBQ0EsTUFQRixFO0FBZkY7QUFBQSxLQUFBLE1BQUE7YUF5QkUsT0FBTyxDQUFQLEtBQUEsQ0FBYyxlQUFJLGFBQWEsaUJBQWIsSUFBYSxDQXpCakMsYUF5QmdCLENBQWQsQztBQS9CSjs7QUFQSSxDQUFOIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjYWxsLCBjYXQsIGluY2x1ZGVzLCBlbXB0eSwgaXNTdHJpbmcsXG4gIGlzQXJyYXksIGlzRnVuY3Rpb24sIGlzRGVmaW5lZCwgaXNPYmplY3QsXG4gIG1pY3Jvc2Vjb25kc30gZnJvbSBcInBhbmRhLXBhcmNobWVudFwiXG5pbXBvcnQge01ldGhvZH0gZnJvbSBcInBhbmRhLWdlbmVyaWNzXCJcbmltcG9ydCB7cmVkLCBncmVlbiwgbWFnZW50YX0gZnJvbSBcImNvbG9ycy9zYWZlXCJcblxudGFza3MgPSB7fVxubG9va3VwID0gKG5hbWUpIC0+IHRhc2tzW25hbWVdXG5cbmRlZmluZSA9IE1ldGhvZC5jcmVhdGVcbiAgZGVzY3JpcHRpb246IFwiRGVmaW5lIGEgdGFzay5cIlxuXG5NZXRob2QuZGVmaW5lIGRlZmluZSwgaXNTdHJpbmcsIGlzQXJyYXksIGlzRnVuY3Rpb24sXG4gIChuYW1lLCBkZXBlbmRlbmNpZXMsIGFjdGlvbikgLT5cbiAgICB0YXNrc1tuYW1lXSA9IHtkZXBlbmRlbmNpZXMsIGFjdGlvbn1cblxuTWV0aG9kLmRlZmluZSBkZWZpbmUsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNGdW5jdGlvbixcbiAgKG5hbWUsIGRlcGVuZGVuY2llcywgYWN0aW9uKSAtPlxuICAgIGRlZmluZSBuYW1lLCAoZGVwZW5kZW5jaWVzLnNwbGl0IC9cXHMvKSwgYWN0aW9uXG5cbk1ldGhvZC5kZWZpbmUgZGVmaW5lLCBpc1N0cmluZywgaXNEZWZpbmVkLFxuICAobmFtZSwgZGVwZW5kZW5jZXMpIC0+IGRlZmluZSBuYW1lLCBkZXBlbmRlbmNlcywgLT5cblxuTWV0aG9kLmRlZmluZSBkZWZpbmUsIGlzU3RyaW5nLCBpc0Z1bmN0aW9uLFxuICAobmFtZSwgYWN0aW9uKSAtPiBkZWZpbmUgbmFtZSwgW10sIGFjdGlvblxuXG5cbnJ1biA9IChuYW1lID0gXCJkZWZhdWx0XCIsIHZpc2l0ZWQgPSBbXSkgLT5cblxuICBmbGFnID0gbmFtZVstMS4uXVxuICBpZiBmbGFnID09IFwiJlwiXG4gICAgYmFja2dyb3VuZCA9IHRydWVcbiAgICBuYW1lID0gbmFtZVswLi4tMl1cblxuICB1bmxlc3MgbmFtZSBpbiB2aXNpdGVkXG5cbiAgICBjb25zb2xlLmVycm9yIFwicDlrOiBTdGFydGluZyAje2dyZWVuIG5hbWV9IC4uLlwiXG5cbiAgICB2aXNpdGVkLnB1c2ggbmFtZVxuXG4gICAgaWYgKHRhc2sgPSBsb29rdXAgbmFtZSk/XG4gICAgICB7ZGVwZW5kZW5jaWVzLCBhY3Rpb259ID0gdGFza1xuXG4gICAgICBmb3IgZGVwZW5kZW5jeSBpbiBkZXBlbmRlbmNpZXNcbiAgICAgICAgYXdhaXQgcnVuIGRlcGVuZGVuY3ksIHZpc2l0ZWRcblxuICAgICAgc3RhcnQgPSBtaWNyb3NlY29uZHMoKVxuXG4gICAgICBmaW5pc2ggPSAtPlxuICAgICAgICBmaW5pc2ggPSBtaWNyb3NlY29uZHMoKVxuICAgICAgICBkdXJhdGlvbiA9IE1hdGgucm91bmQgKGZpbmlzaCAtIHN0YXJ0KS8xMDAwXG4gICAgICAgIGNvbnNvbGUuZXJyb3IgXCJwOWs6IEZpbmlzaGVkICN7Z3JlZW4gbmFtZX0gaW4gI3ttYWdlbnRhIGR1cmF0aW9ufW1zLlwiXG5cbiAgICAgIHJlc3VsdCA9IGFjdGlvbigpXG5cbiAgICAgIGlmIGJhY2tncm91bmRcbiAgICAgICAgaWYgcmVzdWx0Py50aGVuP1xuICAgICAgICAgIHJlc3VsdC50aGVuIGZpbmlzaFxuICAgICAgICBlbHNlXG4gICAgICAgICAgZmluaXNoKClcbiAgICAgIGVsc2VcbiAgICAgICAgYXdhaXQgcmVzdWx0XG4gICAgICAgIGZpbmlzaCgpXG5cbiAgICBlbHNlXG4gICAgICBjb25zb2xlLmVycm9yIHJlZCBcInA5azogdGFzayAje2dyZWVuIG5hbWV9IG5vdCBmb3VuZC5cIlxuXG5leHBvcnQge2RlZmluZSwgcnVufVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/dyoder/repos/panda-9000/src/task.coffee