"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.serve = exports.watch = exports.transform = exports.copy = exports.extension = exports.write = exports.read = exports.glob = void 0;

var _path = require("path");

var _jstransformer = _interopRequireDefault(require("jstransformer"));

var _pandaRiver = require("panda-river");

var _pandaGarden = require("panda-garden");

var _pandaParchment = require("panda-parchment");

var _pandaQuill = require("panda-quill");

var _chokidar = _interopRequireDefault(require("chokidar"));

var _http = _interopRequireDefault(require("http"));

var _connect = _interopRequireDefault(require("connect"));

var _morgan = _interopRequireDefault(require("morgan"));

var _finalhandler = _interopRequireDefault(require("finalhandler"));

var _connectHistoryApiFallback = _interopRequireDefault(require("connect-history-api-fallback"));

var _serveStatic = _interopRequireDefault(require("serve-static"));

var _safe = require("colors/safe");

var _fastGlob = _interopRequireDefault(require("fast-glob"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var complete, copy, create, extension, glob, parse, read, serve, transform, watch, write;
exports.write = write;
exports.watch = watch;
exports.transform = transform;
exports.serve = serve;
exports.read = read;
exports.glob = glob;
exports.extension = extension;
exports.copy = copy;

parse = function (path) {
  var dir, ext, name;
  ({
    dir,
    name,
    ext
  } = (0, _path.parse)(path));
  return {
    path: path,
    directory: dir,
    name: name,
    extension: ext
  };
};

create = (0, _pandaGarden.curry)(function (path, rpath) {
  return (0, _pandaParchment.include)(parse(rpath), {
    source: parse((0, _path.resolve)(path, rpath)),
    target: {},
    data: {}
  });
});

exports.glob = glob = async function (pattern, path) {
  return (0, _pandaRiver.map)(create(path), (await (0, _fastGlob.default)(pattern, {
    cwd: path
  })));
};

complete = function (directory, context) {
  var defaults, extension, name, target;
  ({
    target
  } = context);

  if (target.path != null) {
    context.target = parse(target.path);
  } else {
    defaults = parse((0, _path.resolve)(directory, context.path));

    if (target.directory == null) {
      target.directory = defaults.directory;
    }

    if (target.name == null) {
      target.name = defaults.name;
    }

    if (target.extension == null) {
      target.extension = defaults.extension;
    }

    ({
      directory,
      name,
      extension
    } = target);
    target.path = (0, _path.join)(directory, `${name}${extension}`);
  }

  return context;
};

exports.read = read = (0, _pandaGarden.tee)(async function ({
  source
}) {
  return source.content = await (0, _pandaQuill.read)(source.path);
});
exports.write = write = (0, _pandaGarden.curry)((0, _pandaGarden.binary)(async function (directory, context) {
  var target;
  ({
    target
  } = context);

  if (target.content != null) {
    complete(directory, context);
    await (0, _pandaQuill.mkdirp)("0777", target.directory);
    await (0, _pandaQuill.write)(target.path, target.content);
    return context;
  } else {
    return console.error((0, _safe.red)("[warning] p9k/write: attempt to write with no content."));
  }
}));

exports.extension = extension = function (extension) {
  return (0, _pandaGarden.tee)(function ({
    target
  }) {
    return target.extension = extension;
  });
};

exports.copy = copy = (0, _pandaGarden.curry)((0, _pandaGarden.binary)(async function (directory, context) {
  var source, target;
  ({
    source,
    target
  } = complete(directory, context));
  await (0, _pandaQuill.mkdirp)("0777", target.directory);
  (0, _pandaQuill.cp)(source.path, target.path);
  return context;
}));

exports.transform = transform = function (transformer, options) {
  var adapter;
  adapter = (0, _jstransformer.default)(transformer);
  return (0, _pandaGarden.tee)(async function ({
    source,
    target
  }) {
    var ref, result;

    if (source.content == null) {
      source.content = await read(source.path);
    }

    options.filename = source.path;
    result = await adapter.renderAsync(source.content, options);
    return target.content = (ref = result.body) != null ? ref : "";
  });
};

exports.watch = watch = function (path, handler) {
  return function () {
    return _chokidar.default.watch(path, {
      ignoreInitial: true
    }).on("all", handler);
  };
};

exports.serve = serve = function (path, options) {
  return function () {
    var handler, port;
    ({
      port
    } = options);
    handler = (0, _connect.default)();

    if (options.logger != null) {
      handler.use((0, _morgan.default)(options.logger));
    }

    if (options.rewrite != null) {
      handler.use(options.rewrite ? (0, _connectHistoryApiFallback.default)() : (0, _connectHistoryApiFallback.default)(options.rewrite));
    }

    handler.use((0, _serveStatic.default)("./build", options.files));
    handler.use(_finalhandler.default);
    return _http.default.createServer(handler).listen(port, function () {
      return console.log((0, _safe.green)(`p9k: server listening on port ${port}`));
    });
  };
};
//# sourceMappingURL=data:application/json;base64,
//# sourceURL=/Users/dyoder/repos/panda-9000/src/helpers.coffee