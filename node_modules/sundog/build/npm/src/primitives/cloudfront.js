"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pandaParchment = require("panda-parchment");

var _pandaRiver = require("panda-river");

var _privateUtils = require("./private-utils");

var _url = require("../helpers/url");

var _kms = _interopRequireDefault(require("./kms"));

var _lift = require("../lift");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var cloudfrontPrimitive;

cloudfrontPrimitive = function (SDK) {
  return function (configuration) {
    var cfr, get, hoistETag, invalidate, list, randomBytes;
    cfr = (0, _lift.applyConfiguration)(configuration, SDK.CloudFront);
    ({
      randomBytes
    } = (0, _kms.default)(SDK)(configuration));

    list = async function (current = [], marker) {
      var data, params;
      params = {
        MaxItems: "100"
      };

      if (marker) {
        params.Marker = marker;
      }

      data = await cfr.listDistributions(params);
      current = (0, _pandaParchment.cat)(current, data.DistributionList.Items);

      if (data.IsTruncated) {
        return await list(current, data.DistributionList.Marker);
      } else {
        return current;
      }
    };

    hoistETag = function (data) {
      var Distribution;
      ({
        Distribution
      } = data);
      return (0, _pandaParchment.merge)(Distribution, {
        ETag: data.ETag
      });
    };

    get = async function (name) {
      var matches, pattern;
      list = await list();
      pattern = {
        Aliases: {
          Quantity: 1,
          Items: [(0, _url.regularlyQualify)(name)]
        }
      };
      matches = (0, _pandaRiver.collect)((0, _privateUtils.where)(pattern, list));

      if ((0, _pandaParchment.empty)(matches)) {
        return false;
      } else {
        return hoistETag((await cfr.getDistribution({
          Id: matches[0].Id
        })));
      }
    };

    invalidate = async function ({
      Id
    }, paths) {
      var Invalidation, Status, params;

      if (paths == null) {
        paths = ["/*"];
      }

      params = {
        DistributionId: Id,
        InvalidationBatch: {
          CallerReference: "Sky" + (await randomBytes(16)).toString(),
          Paths: {
            Quantity: paths.length,
            Items: paths
          }
        }
      };
      ({
        Invalidation
      } = await cfr.createInvalidation(params));
      params = {
        DistributionId: Id,
        Id: Invalidation.Id
      };

      while (true) {
        ({
          Invalidation: {
            Status
          }
        } = await cfr.getInvalidation(params));

        if (Status === "Completed") {
          return;
        } else {
          await (0, _pandaParchment.sleep)(15000);
        }
      }
    };

    return {
      list,
      get,
      invalidate
    };
  };
};

var _default = cloudfrontPrimitive;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9zdW5kb2cvc3JjL3ByaW1pdGl2ZXMvY2xvdWRmcm9udC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBTEEsSUFBQSxtQkFBQTs7QUFPQSxtQkFBQSxHQUFzQixVQUFBLEdBQUEsRUFBQTtTQUNwQixVQUFBLGFBQUEsRUFBQTtBQUNFLFFBQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxTQUFBLEVBQUEsVUFBQSxFQUFBLElBQUEsRUFBQSxXQUFBO0FBQUEsSUFBQSxHQUFBLEdBQU0sOEJBQUEsYUFBQSxFQUFrQyxHQUFHLENBQXJDLFVBQUEsQ0FBTjtBQUNBLEtBQUE7QUFBQSxNQUFBO0FBQUEsUUFBaUIsa0JBQUQsR0FBQyxDQUFELENBQWhCLGFBQWdCLENBQWhCOztBQUVBLElBQUEsSUFBQSxHQUFPLGdCQUFDLE9BQUEsR0FBRCxFQUFBLEVBQUEsTUFBQSxFQUFBO0FBQ0wsVUFBQSxJQUFBLEVBQUEsTUFBQTtBQUFBLE1BQUEsTUFBQSxHQUFTO0FBQUEsUUFBQSxRQUFBLEVBQVU7QUFBVixPQUFUOztBQUNBLFVBQUEsTUFBQSxFQUFBO0FBQUEsUUFBQSxNQUFNLENBQU4sTUFBQSxHQUFBLE1BQUE7OztBQUNBLE1BQUEsSUFBQSxHQUFPLE1BQU0sR0FBRyxDQUFILGlCQUFBLENBQU4sTUFBTSxDQUFiO0FBQ0EsTUFBQSxPQUFBLEdBQVUseUJBQUEsT0FBQSxFQUFhLElBQUksQ0FBQyxnQkFBTCxDQUFiLEtBQUEsQ0FBVjs7QUFDQSxVQUFHLElBQUksQ0FBUCxXQUFBLEVBQUE7QUFDRSxlQUFBLE1BQU0sSUFBQSxDQUFBLE9BQUEsRUFBYyxJQUFJLENBQUMsZ0JBQUwsQ0FEdEIsTUFDUSxDQUFOO0FBREYsT0FBQSxNQUFBO2VBQUEsTzs7QUFMSyxLQUFQOztBQVVBLElBQUEsU0FBQSxHQUFZLFVBQUEsSUFBQSxFQUFBO0FBQ1YsVUFBQSxZQUFBO0FBQUEsT0FBQTtBQUFBLFFBQUE7QUFBQSxVQUFBLElBQUE7YUFDQSwyQkFBQSxZQUFBLEVBQW9CO0FBQUMsUUFBQSxJQUFBLEVBQU0sSUFBSSxDQUFDO0FBQVosT0FBcEIsQztBQUZVLEtBQVo7O0FBSUEsSUFBQSxHQUFBLEdBQU0sZ0JBQUEsSUFBQSxFQUFBO0FBQ0osVUFBQSxPQUFBLEVBQUEsT0FBQTtBQUFBLE1BQUEsSUFBQSxHQUFPLE1BQU0sSUFBTixFQUFQO0FBQ0EsTUFBQSxPQUFBLEdBQ0U7QUFBQSxRQUFBLE9BQUEsRUFDRTtBQUFBLFVBQUEsUUFBQSxFQUFBLENBQUE7QUFDQSxVQUFBLEtBQUEsRUFBTyxDQUFFLDJCQUFGLElBQUUsQ0FBRjtBQURQO0FBREYsT0FERjtBQUtBLE1BQUEsT0FBQSxHQUFVLHlCQUFRLHlCQUFBLE9BQUEsRUFBUixJQUFRLENBQVIsQ0FBVjs7QUFDQSxVQUFHLDJCQUFILE9BQUcsQ0FBSCxFQUFBO2VBQUEsSztBQUFBLE9BQUEsTUFBQTtlQUdFLFNBQUEsRUFBVSxNQUFNLEdBQUcsQ0FBSCxlQUFBLENBQW9CO0FBQUEsVUFBQSxFQUFBLEVBQUksT0FBUSxDQUFBLENBQUEsQ0FBUixDQUFXO0FBQWYsU0FBcEIsQ0FBaEIsRTs7QUFYRSxLQUFOOztBQWFBLElBQUEsVUFBQSxHQUFhLGdCQUFDO0FBQUQsTUFBQTtBQUFDLEtBQUQsRUFBQSxLQUFBLEVBQUE7QUFDWCxVQUFBLFlBQUEsRUFBQSxNQUFBLEVBQUEsTUFBQTs7O0FBQUEsUUFBQSxLQUFBLEdBQVMsQ0FBQSxJQUFBLENBQVQ7OztBQUNBLE1BQUEsTUFBQSxHQUNFO0FBQUEsUUFBQSxjQUFBLEVBQUEsRUFBQTtBQUNBLFFBQUEsaUJBQUEsRUFDRTtBQUFBLFVBQUEsZUFBQSxFQUFpQixRQUFRLENBQUMsTUFBTSxXQUFBLENBQVAsRUFBTyxDQUFQLEVBQXpCLFFBQXlCLEVBQXpCO0FBQ0EsVUFBQSxLQUFBLEVBQU87QUFBQyxZQUFBLFFBQUEsRUFBVSxLQUFLLENBQWhCLE1BQUE7QUFBeUIsWUFBQSxLQUFBLEVBQU87QUFBaEM7QUFEUDtBQUZGLE9BREY7QUFNQSxPQUFBO0FBQUEsUUFBQTtBQUFBLFVBQWlCLE1BQU0sR0FBRyxDQUFILGtCQUFBLENBQXZCLE1BQXVCLENBQXZCO0FBQ0EsTUFBQSxNQUFBLEdBQVM7QUFBQyxRQUFBLGNBQUEsRUFBRCxFQUFBO0FBQXFCLFFBQUEsRUFBQSxFQUFJLFlBQVksQ0FBQztBQUF0QyxPQUFUOztBQUVBLGFBQUEsSUFBQSxFQUFBO0FBQ0UsU0FBQTtBQUFDLFVBQUEsWUFBQSxFQUFjO0FBQUEsWUFBQTtBQUFBO0FBQWYsWUFBMkIsTUFBTSxHQUFHLENBQUgsZUFBQSxDQUFqQyxNQUFpQyxDQUFqQzs7QUFDQSxZQUFHLE1BQUEsS0FBSCxXQUFBLEVBQUE7QUFBQTtBQUFBLFNBQUEsTUFBQTtBQUEwQyxnQkFBTSwyQkFBaEQsS0FBZ0QsQ0FBTjs7QUFGNUM7QUFYVyxLQUFiOztXQWlCQTtBQUFBLE1BQUEsSUFBQTtBQUFBLE1BQUEsR0FBQTtBQUFBLE1BQUE7QUFBQSxLO0FBaERGLEc7QUFEb0IsQ0FBdEI7O2VBbURlLG1CIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtjYXQsIGVtcHR5LCBzbGVlcCwgbWVyZ2V9IGZyb20gXCJwYW5kYS1wYXJjaG1lbnRcIlxuaW1wb3J0IHtjb2xsZWN0fSBmcm9tIFwicGFuZGEtcml2ZXJcIlxuaW1wb3J0IHt3aGVyZX0gZnJvbSBcIi4vcHJpdmF0ZS11dGlsc1wiXG5pbXBvcnQge3Jvb3QsIHJlZ3VsYXJseVF1YWxpZnl9IGZyb20gXCIuLi9oZWxwZXJzL3VybFwiXG5pbXBvcnQgS01TIGZyb20gXCIuL2ttc1wiXG5pbXBvcnQge2FwcGx5Q29uZmlndXJhdGlvbn0gZnJvbSBcIi4uL2xpZnRcIlxuXG5jbG91ZGZyb250UHJpbWl0aXZlID0gKFNESykgLT5cbiAgKGNvbmZpZ3VyYXRpb24pIC0+XG4gICAgY2ZyID0gYXBwbHlDb25maWd1cmF0aW9uIGNvbmZpZ3VyYXRpb24sIFNESy5DbG91ZEZyb250XG4gICAge3JhbmRvbUJ5dGVzfSA9IChLTVMgU0RLKSBjb25maWd1cmF0aW9uXG5cbiAgICBsaXN0ID0gKGN1cnJlbnQ9W10sIG1hcmtlcikgLT5cbiAgICAgIHBhcmFtcyA9IE1heEl0ZW1zOiBcIjEwMFwiXG4gICAgICBwYXJhbXMuTWFya2VyID0gbWFya2VyIGlmIG1hcmtlclxuICAgICAgZGF0YSA9IGF3YWl0IGNmci5saXN0RGlzdHJpYnV0aW9ucyBwYXJhbXNcbiAgICAgIGN1cnJlbnQgPSBjYXQgY3VycmVudCwgZGF0YS5EaXN0cmlidXRpb25MaXN0Lkl0ZW1zXG4gICAgICBpZiBkYXRhLklzVHJ1bmNhdGVkXG4gICAgICAgIGF3YWl0IGxpc3QgY3VycmVudCwgZGF0YS5EaXN0cmlidXRpb25MaXN0Lk1hcmtlclxuICAgICAgZWxzZVxuICAgICAgICBjdXJyZW50XG5cbiAgICBob2lzdEVUYWcgPSAoZGF0YSkgLT5cbiAgICAgIHtEaXN0cmlidXRpb259ID0gZGF0YVxuICAgICAgbWVyZ2UgRGlzdHJpYnV0aW9uLCB7RVRhZzogZGF0YS5FVGFnfVxuXG4gICAgZ2V0ID0gKG5hbWUpIC0+XG4gICAgICBsaXN0ID0gYXdhaXQgbGlzdCgpXG4gICAgICBwYXR0ZXJuID1cbiAgICAgICAgQWxpYXNlczpcbiAgICAgICAgICBRdWFudGl0eTogMSxcbiAgICAgICAgICBJdGVtczogWyByZWd1bGFybHlRdWFsaWZ5IG5hbWUgXVxuXG4gICAgICBtYXRjaGVzID0gY29sbGVjdCB3aGVyZSBwYXR0ZXJuLCBsaXN0XG4gICAgICBpZiBlbXB0eSBtYXRjaGVzXG4gICAgICAgIGZhbHNlXG4gICAgICBlbHNlXG4gICAgICAgIGhvaXN0RVRhZyBhd2FpdCBjZnIuZ2V0RGlzdHJpYnV0aW9uIElkOiBtYXRjaGVzWzBdLklkXG5cbiAgICBpbnZhbGlkYXRlID0gKHtJZH0sIHBhdGhzKSAtPlxuICAgICAgcGF0aHMgPz0gW1wiLypcIl1cbiAgICAgIHBhcmFtcyA9XG4gICAgICAgIERpc3RyaWJ1dGlvbklkOiBJZFxuICAgICAgICBJbnZhbGlkYXRpb25CYXRjaDpcbiAgICAgICAgICBDYWxsZXJSZWZlcmVuY2U6IFwiU2t5XCIgKyAoYXdhaXQgcmFuZG9tQnl0ZXMgMTYpLnRvU3RyaW5nKClcbiAgICAgICAgICBQYXRoczoge1F1YW50aXR5OiBwYXRocy5sZW5ndGgsIEl0ZW1zOiBwYXRoc31cblxuICAgICAge0ludmFsaWRhdGlvbn0gPSBhd2FpdCBjZnIuY3JlYXRlSW52YWxpZGF0aW9uIHBhcmFtc1xuICAgICAgcGFyYW1zID0ge0Rpc3RyaWJ1dGlvbklkOiBJZCwgSWQ6IEludmFsaWRhdGlvbi5JZH1cblxuICAgICAgd2hpbGUgdHJ1ZVxuICAgICAgICB7SW52YWxpZGF0aW9uOiB7U3RhdHVzfX0gPSBhd2FpdCBjZnIuZ2V0SW52YWxpZGF0aW9uIHBhcmFtc1xuICAgICAgICBpZiBTdGF0dXMgPT0gXCJDb21wbGV0ZWRcIiB0aGVuIHJldHVybiBlbHNlIGF3YWl0IHNsZWVwIDE1MDAwXG5cblxuXG4gICAge2xpc3QsIGdldCwgaW52YWxpZGF0ZX1cblxuZXhwb3J0IGRlZmF1bHQgY2xvdWRmcm9udFByaW1pdGl2ZVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/david/repos/sundog/src/primitives/cloudfront.coffee