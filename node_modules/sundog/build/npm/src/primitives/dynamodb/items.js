"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pandaParchment = require("panda-parchment");

var _expressions = require("./helpers/expressions");

//===========================================================================
// Functions that act on Items
//===========================================================================
var DynamoDB;

DynamoDB = function (db) {
  var del, get, put, update;

  get = async function (name, key, options = {}) {
    var ConsumedCapacity, Item, ReturnConsumedCapacity, p;
    ({
      ReturnConsumedCapacity
    } = options);
    p = {
      TableName: name,
      Key: key
    };
    ({
      Item,
      ConsumedCapacity
    } = await db.getItem((0, _pandaParchment.merge)(p, options)));

    if (ReturnConsumedCapacity) {
      return {
        Item,
        ConsumedCapacity
      };
    } else {
      return Item;
    }
  };

  put = async function (name, item, options = {}) {
    var p;
    p = {
      TableName: name,
      Item: item
    };
    return await db.putItem((0, _pandaParchment.merge)(p, options));
  };

  del = async function (name, key, options = {}) {
    var p;
    p = {
      TableName: name,
      Key: key
    };
    return await db.deleteItem((0, _pandaParchment.merge)(p, options));
  };

  update = async function (name, key, updateEx, options = {}) {
    var _values, p, result;

    p = {
      TableName: name,
      Key: key
    };
    ({
      result,
      values: _values
    } = (0, _expressions.parseConditional)(updateEx));

    if (result) {
      options.UpdateExpression = result;
    }

    if (_values) {
      options.ExpressionAttributeValues = _values;
    }

    return await db.updateItem((0, _pandaParchment.merge)(p, options));
  };

  return {
    get,
    put,
    del,
    update
  };
};

var _default = DynamoDB;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9zdW5kb2cvc3JjL3ByaW1pdGl2ZXMvZHluYW1vZGIvaXRlbXMuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFHQTs7QUFDQTs7QUFKQTs7O0FBQUEsSUFBQSxRQUFBOztBQU1BLFFBQUEsR0FBVyxVQUFBLEVBQUEsRUFBQTtBQUNULE1BQUEsR0FBQSxFQUFBLEdBQUEsRUFBQSxHQUFBLEVBQUEsTUFBQTs7QUFBQSxFQUFBLEdBQUEsR0FBTSxnQkFBQSxJQUFBLEVBQUEsR0FBQSxFQUFZLE9BQUEsR0FBWixFQUFBLEVBQUE7QUFDSixRQUFBLGdCQUFBLEVBQUEsSUFBQSxFQUFBLHNCQUFBLEVBQUEsQ0FBQTtBQUFBLEtBQUE7QUFBQSxNQUFBO0FBQUEsUUFBQSxPQUFBO0FBQ0EsSUFBQSxDQUFBLEdBQUk7QUFBQyxNQUFBLFNBQUEsRUFBRCxJQUFBO0FBQWtCLE1BQUEsR0FBQSxFQUFLO0FBQXZCLEtBQUo7QUFDQSxLQUFBO0FBQUEsTUFBQSxJQUFBO0FBQUEsTUFBQTtBQUFBLFFBQTJCLE1BQU0sRUFBRSxDQUFGLE9BQUEsQ0FBVywyQkFBQSxDQUFBLEVBQTVDLE9BQTRDLENBQVgsQ0FBakM7O0FBQ0EsUUFBQSxzQkFBQSxFQUFBO2FBQStCO0FBQUEsUUFBQSxJQUFBO0FBQS9CLFFBQUE7QUFBK0IsTztBQUEvQixLQUFBLE1BQUE7YUFBQSxJOztBQUpJLEdBQU47O0FBTUEsRUFBQSxHQUFBLEdBQU0sZ0JBQUEsSUFBQSxFQUFBLElBQUEsRUFBYSxPQUFBLEdBQWIsRUFBQSxFQUFBO0FBQ0osUUFBQSxDQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUk7QUFBQyxNQUFBLFNBQUEsRUFBRCxJQUFBO0FBQWtCLE1BQUEsSUFBQSxFQUFNO0FBQXhCLEtBQUo7QUFDQSxXQUFBLE1BQU0sRUFBRSxDQUFGLE9BQUEsQ0FBVywyQkFBQSxDQUFBLEVBQWpCLE9BQWlCLENBQVgsQ0FBTjtBQUZJLEdBQU47O0FBSUEsRUFBQSxHQUFBLEdBQU0sZ0JBQUEsSUFBQSxFQUFBLEdBQUEsRUFBWSxPQUFBLEdBQVosRUFBQSxFQUFBO0FBQ0osUUFBQSxDQUFBO0FBQUEsSUFBQSxDQUFBLEdBQUk7QUFBQyxNQUFBLFNBQUEsRUFBRCxJQUFBO0FBQWtCLE1BQUEsR0FBQSxFQUFLO0FBQXZCLEtBQUo7QUFDQSxXQUFBLE1BQU0sRUFBRSxDQUFGLFVBQUEsQ0FBYywyQkFBQSxDQUFBLEVBQXBCLE9BQW9CLENBQWQsQ0FBTjtBQUZJLEdBQU47O0FBSUEsRUFBQSxNQUFBLEdBQVMsZ0JBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxRQUFBLEVBQXNCLE9BQUEsR0FBdEIsRUFBQSxFQUFBO0FBQ1AsUUFBQSxPQUFBLEVBQUEsQ0FBQSxFQUFBLE1BQUE7O0FBQUEsSUFBQSxDQUFBLEdBQUk7QUFBQyxNQUFBLFNBQUEsRUFBRCxJQUFBO0FBQWtCLE1BQUEsR0FBQSxFQUFLO0FBQXZCLEtBQUo7QUFDQSxLQUFBO0FBQUEsTUFBQSxNQUFBO0FBQVMsTUFBQSxNQUFBLEVBQU87QUFBaEIsUUFBMkIsbUNBQTNCLFFBQTJCLENBQTNCOztBQUNBLFFBQUEsTUFBQSxFQUFBO0FBQUEsTUFBQSxPQUFPLENBQVAsZ0JBQUEsR0FBQSxNQUFBOzs7QUFDQSxRQUFBLE9BQUEsRUFBQTtBQUFBLE1BQUEsT0FBTyxDQUFQLHlCQUFBLEdBQUEsT0FBQTs7O0FBQ0EsV0FBQSxNQUFNLEVBQUUsQ0FBRixVQUFBLENBQWMsMkJBQUEsQ0FBQSxFQUFwQixPQUFvQixDQUFkLENBQU47QUFMTyxHQUFUOztTQU9BO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQTtBQUFBLEc7QUF0QlMsQ0FBWDs7ZUF3QmUsUSIsInNvdXJjZXNDb250ZW50IjpbIiM9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiMgRnVuY3Rpb25zIHRoYXQgYWN0IG9uIEl0ZW1zXG4jPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09XG5pbXBvcnQge21lcmdlfSBmcm9tIFwicGFuZGEtcGFyY2htZW50XCJcbmltcG9ydCB7cGFyc2VDb25kaXRpb25hbH0gZnJvbSBcIi4vaGVscGVycy9leHByZXNzaW9uc1wiXG5cbkR5bmFtb0RCID0gKGRiKSAtPlxuICBnZXQgPSAobmFtZSwga2V5LCBvcHRpb25zPXt9KSAtPlxuICAgIHtSZXR1cm5Db25zdW1lZENhcGFjaXR5fSA9IG9wdGlvbnNcbiAgICBwID0ge1RhYmxlTmFtZTogbmFtZSwgS2V5OiBrZXl9XG4gICAge0l0ZW0sIENvbnN1bWVkQ2FwYWNpdHl9ID0gYXdhaXQgZGIuZ2V0SXRlbSBtZXJnZSBwLCBvcHRpb25zXG4gICAgaWYgUmV0dXJuQ29uc3VtZWRDYXBhY2l0eSB0aGVuIHtJdGVtLCBDb25zdW1lZENhcGFjaXR5fSBlbHNlIEl0ZW1cblxuICBwdXQgPSAobmFtZSwgaXRlbSwgb3B0aW9ucz17fSkgLT5cbiAgICBwID0ge1RhYmxlTmFtZTogbmFtZSwgSXRlbTogaXRlbX1cbiAgICBhd2FpdCBkYi5wdXRJdGVtIG1lcmdlIHAsIG9wdGlvbnNcblxuICBkZWwgPSAobmFtZSwga2V5LCBvcHRpb25zPXt9KSAtPlxuICAgIHAgPSB7VGFibGVOYW1lOiBuYW1lLCBLZXk6IGtleX1cbiAgICBhd2FpdCBkYi5kZWxldGVJdGVtIG1lcmdlIHAsIG9wdGlvbnNcblxuICB1cGRhdGUgPSAobmFtZSwga2V5LCB1cGRhdGVFeCwgb3B0aW9ucz17fSkgLT5cbiAgICBwID0ge1RhYmxlTmFtZTogbmFtZSwgS2V5OiBrZXl9XG4gICAge3Jlc3VsdCwgdmFsdWVzOl92YWx1ZXN9ID0gcGFyc2VDb25kaXRpb25hbCB1cGRhdGVFeFxuICAgIG9wdGlvbnMuVXBkYXRlRXhwcmVzc2lvbiA9IHJlc3VsdCBpZiByZXN1bHRcbiAgICBvcHRpb25zLkV4cHJlc3Npb25BdHRyaWJ1dGVWYWx1ZXMgPSBfdmFsdWVzIGlmIF92YWx1ZXNcbiAgICBhd2FpdCBkYi51cGRhdGVJdGVtIG1lcmdlIHAsIG9wdGlvbnNcblxuICB7Z2V0LCBwdXQsIGRlbCwgdXBkYXRlfVxuXG5leHBvcnQgZGVmYXVsdCBEeW5hbW9EQlxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/david/repos/sundog/src/primitives/dynamodb/items.coffee