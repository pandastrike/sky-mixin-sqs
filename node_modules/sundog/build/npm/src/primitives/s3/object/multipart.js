"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pandaParchment = require("panda-parchment");

var _pandaQuill = require("panda-quill");

var _pandaGenerics = require("panda-generics");

var _mime = _interopRequireDefault(require("mime"));

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Section;

Section = function (s3) {
  var multipartAbort, multipartComplete, multipartPut, multipartStart;

  multipartStart = async function (Bucket, Key, ContentType, options = {}) {
    return await s3.createMultipartUpload((0, _pandaParchment.merge)({
      Bucket,
      Key,
      ContentType
    }, options));
  };

  multipartAbort = async function (Bucket, Key, UploadId) {
    return await s3.abortMultipartUpload({
      Bucket,
      Key,
      UploadId
    });
  };

  multipartComplete = async function (Bucket, Key, UploadId, MultipartUpload) {
    return await s3.completeMultipartUpload({
      Bucket,
      Key,
      UploadId,
      MultipartUpload
    });
  };

  multipartPut = _pandaGenerics.Method.create({
    default: function (...args) {
      throw new Error(`sundog:s3:multipartPut - no match on ${JSON.stringify(args)}`);
    }
  }); // Putting a buffer of raw data to S3

  _pandaGenerics.Method.define(multipartPut, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isBuffer, _pandaParchment.isString, async function (Bucket, Key, UploadId, PartNumber, buffer, type) {
    return await s3.uploadPart({
      Bucket,
      Key,
      UploadId,
      PartNumber,
      ContentType: type,
      ContentMD5: (0, _helpers.md5)(buffer),
      Body: buffer
    });
  }); // Putting a string to S3


  _pandaGenerics.Method.define(multipartPut, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, function (Bucket, Key, UploadId, PartNumber, text, type) {
    return multipartPut(Bucket, Key, UploadId, PartNumber, Buffer.from(text, type), type);
  }); // Putting a file on disk to S3


  _pandaGenerics.Method.define(multipartPut, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString);

  (async function (Bucket, Key, UploadId, PartNumber, path) {
    return multipartPut(Bucket, Key, UploadId, PartNumber, (await (0, _pandaQuill.read)(path, "buffer")), _mime.default.getType(path));
  }); // Putting a file on disk to S3, with type override


  _pandaGenerics.Method.define(multipartPut, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString, _pandaParchment.isString);

  (async function (Bucket, Key, UploadId, PartNumber, path) {
    return multipartPut(Bucket, Key, UploadId, PartNumber, (await (0, _pandaQuill.read)(file.path, "buffer")), file.type);
  });

  return {
    multipartStart,
    multipartAbort,
    multipartComplete,
    multipartPut
  };
};

var _default = Section;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9zdW5kb2cvc3JjL3ByaW1pdGl2ZXMvczMvb2JqZWN0L211bHRpcGFydC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUNBOztBQUNBOztBQUNBOzs7O0FBSkEsSUFBQSxPQUFBOztBQU9BLE9BQUEsR0FBVSxVQUFBLEVBQUEsRUFBQTtBQUNSLE1BQUEsY0FBQSxFQUFBLGlCQUFBLEVBQUEsWUFBQSxFQUFBLGNBQUE7O0FBQUEsRUFBQSxjQUFBLEdBQWlCLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsV0FBQSxFQUEyQixPQUFBLEdBQTNCLEVBQUEsRUFBQTtBQUNmLFdBQUEsTUFBTSxFQUFFLENBQUYscUJBQUEsQ0FBeUIsMkJBQU07QUFBQSxNQUFBLE1BQUE7QUFBQSxNQUFBLEdBQUE7QUFBTixNQUFBO0FBQU0sS0FBTixFQUEvQixPQUErQixDQUF6QixDQUFOO0FBRGUsR0FBakI7O0FBR0EsRUFBQSxjQUFBLEdBQWlCLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBO0FBQ2YsV0FBQSxNQUFNLEVBQUUsQ0FBRixvQkFBQSxDQUF3QjtBQUFBLE1BQUEsTUFBQTtBQUFBLE1BQUEsR0FBQTtBQUE5QixNQUFBO0FBQThCLEtBQXhCLENBQU47QUFEZSxHQUFqQjs7QUFHQSxFQUFBLGlCQUFBLEdBQW9CLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLGVBQUEsRUFBQTtBQUNsQixXQUFBLE1BQU0sRUFBRSxDQUFGLHVCQUFBLENBQTJCO0FBQUEsTUFBQSxNQUFBO0FBQUEsTUFBQSxHQUFBO0FBQUEsTUFBQSxRQUFBO0FBQWpDLE1BQUE7QUFBaUMsS0FBM0IsQ0FBTjtBQURrQixHQUFwQjs7QUFHQSxFQUFBLFlBQUEsR0FBZSxzQkFBQSxNQUFBLENBQWM7QUFBQSxJQUFBLE9BQUEsRUFBUyxVQUFBLEdBQUEsSUFBQSxFQUFBO0FBQ3BDLFlBQU0sSUFBQSxLQUFBLENBQVUsd0NBQ0EsSUFBSSxDQUFKLFNBQUEsQ0FEQSxJQUNBLENBRFYsRUFBQSxDQUFOO0FBRG9DO0FBQVQsR0FBZCxDQUFmLENBVlEsQzs7QUFlUix3QkFBQSxNQUFBLENBQUEsWUFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUNBLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLFVBQUEsRUFBQSxNQUFBLEVBQUEsSUFBQSxFQUFBO0FBQ0UsV0FBQSxNQUFNLEVBQUUsQ0FBRixVQUFBLENBQWM7QUFBQSxNQUFBLE1BQUE7QUFBQSxNQUFBLEdBQUE7QUFBQSxNQUFBLFFBQUE7QUFBQSxNQUFBLFVBQUE7QUFFbEIsTUFBQSxXQUFBLEVBRmtCLElBQUE7QUFHbEIsTUFBQSxVQUFBLEVBQVksa0JBSE0sTUFHTixDQUhNO0FBSWxCLE1BQUEsSUFBQSxFQUFNO0FBSlksS0FBZCxDQUFOO0FBaEJGLEdBY0EsRUFmUSxDOzs7QUF3QlIsd0JBQUEsTUFBQSxDQUFBLFlBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFDQSxVQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLFVBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBO1dBQ0UsWUFBQSxDQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLFVBQUEsRUFDRSxNQUFNLENBQU4sSUFBQSxDQUFBLElBQUEsRUFERixJQUNFLENBREYsRUFBQSxJQUFBLEM7QUF6QkYsR0F1QkEsRUF4QlEsQzs7O0FBOEJSLHdCQUFBLE1BQUEsQ0FBQSxZQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQTs7QUFDQSxHQUFBLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsUUFBQSxFQUFBLFVBQUEsRUFBQSxJQUFBLEVBQUE7V0FDRSxZQUFBLENBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxRQUFBLEVBQUEsVUFBQSxHQUNHLE1BQU0sc0JBQUEsSUFBQSxFQURULFFBQ1MsQ0FEVCxHQUNnQyxjQUFBLE9BQUEsQ0FEaEMsSUFDZ0MsQ0FEaEMsQztBQS9CRixHQThCQSxFQS9CUSxDOzs7QUFvQ1Isd0JBQUEsTUFBQSxDQUFBLFlBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBLEVBQUEsd0JBQUEsRUFBQSx3QkFBQSxFQUFBLHdCQUFBOztBQUNBLEdBQUEsZ0JBQUEsTUFBQSxFQUFBLEdBQUEsRUFBQSxRQUFBLEVBQUEsVUFBQSxFQUFBLElBQUEsRUFBQTtXQUNFLFlBQUEsQ0FBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLFFBQUEsRUFBQSxVQUFBLEdBQ0csTUFBTSxzQkFBSyxJQUFJLENBQVQsSUFBQSxFQURULFFBQ1MsQ0FEVCxHQUNvQyxJQUFJLENBRHhDLElBQUEsQztBQURGLEdBQUE7O1NBSUE7QUFBQSxJQUFBLGNBQUE7QUFBQSxJQUFBLGNBQUE7QUFBQSxJQUFBLGlCQUFBO0FBQUEsSUFBQTtBQUFBLEc7QUF6Q1EsQ0FBVjs7ZUEyQ2UsTyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7bWVyZ2UsIGlzU3RyaW5nLCBpc0J1ZmZlcn0gZnJvbSBcInBhbmRhLXBhcmNobWVudFwiXG5pbXBvcnQge3JlYWR9IGZyb20gXCJwYW5kYS1xdWlsbFwiXG5pbXBvcnQge01ldGhvZH0gZnJvbSBcInBhbmRhLWdlbmVyaWNzXCJcbmltcG9ydCBtaW1lIGZyb20gXCJtaW1lXCJcbmltcG9ydCB7bWQ1fSBmcm9tIFwiLi4vaGVscGVyc1wiXG5cblxuU2VjdGlvbiA9IChzMykgLT5cbiAgbXVsdGlwYXJ0U3RhcnQgPSAoQnVja2V0LCBLZXksIENvbnRlbnRUeXBlLCBvcHRpb25zPXt9KSAtPlxuICAgIGF3YWl0IHMzLmNyZWF0ZU11bHRpcGFydFVwbG9hZCBtZXJnZSB7QnVja2V0LCBLZXksIENvbnRlbnRUeXBlfSwgb3B0aW9uc1xuXG4gIG11bHRpcGFydEFib3J0ID0gKEJ1Y2tldCwgS2V5LCBVcGxvYWRJZCkgLT5cbiAgICBhd2FpdCBzMy5hYm9ydE11bHRpcGFydFVwbG9hZCB7QnVja2V0LCBLZXksIFVwbG9hZElkfVxuXG4gIG11bHRpcGFydENvbXBsZXRlID0gKEJ1Y2tldCwgS2V5LCBVcGxvYWRJZCwgTXVsdGlwYXJ0VXBsb2FkKSAtPlxuICAgIGF3YWl0IHMzLmNvbXBsZXRlTXVsdGlwYXJ0VXBsb2FkIHtCdWNrZXQsIEtleSwgVXBsb2FkSWQsIE11bHRpcGFydFVwbG9hZH1cblxuICBtdWx0aXBhcnRQdXQgPSBNZXRob2QuY3JlYXRlIGRlZmF1bHQ6IChhcmdzLi4uKSAtPlxuICAgIHRocm93IG5ldyBFcnJvciBcInN1bmRvZzpzMzptdWx0aXBhcnRQdXQgLVxuICAgICAgbm8gbWF0Y2ggb24gI3tKU09OLnN0cmluZ2lmeSBhcmdzfVwiXG5cbiAgIyBQdXR0aW5nIGEgYnVmZmVyIG9mIHJhdyBkYXRhIHRvIFMzXG4gIE1ldGhvZC5kZWZpbmUgbXVsdGlwYXJ0UHV0LCBpc1N0cmluZywgaXNTdHJpbmcsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNCdWZmZXIsIGlzU3RyaW5nLFxuICAoQnVja2V0LCBLZXksIFVwbG9hZElkLCBQYXJ0TnVtYmVyLCBidWZmZXIsIHR5cGUpIC0+XG4gICAgYXdhaXQgczMudXBsb2FkUGFydCB7XG4gICAgICBCdWNrZXQsIEtleSwgVXBsb2FkSWQsIFBhcnROdW1iZXIsXG4gICAgICBDb250ZW50VHlwZTogdHlwZVxuICAgICAgQ29udGVudE1ENTogbWQ1IGJ1ZmZlclxuICAgICAgQm9keTogYnVmZmVyXG4gICAgfVxuICAjIFB1dHRpbmcgYSBzdHJpbmcgdG8gUzNcbiAgTWV0aG9kLmRlZmluZSBtdWx0aXBhcnRQdXQsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNTdHJpbmcsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNTdHJpbmcsXG4gIChCdWNrZXQsIEtleSwgVXBsb2FkSWQsIFBhcnROdW1iZXIsIHRleHQsIHR5cGUpIC0+XG4gICAgbXVsdGlwYXJ0UHV0IEJ1Y2tldCwgS2V5LCBVcGxvYWRJZCwgUGFydE51bWJlcixcbiAgICAgIEJ1ZmZlci5mcm9tKHRleHQsIHR5cGUpLCB0eXBlXG5cbiAgIyBQdXR0aW5nIGEgZmlsZSBvbiBkaXNrIHRvIFMzXG4gIE1ldGhvZC5kZWZpbmUgbXVsdGlwYXJ0UHV0LCBpc1N0cmluZywgaXNTdHJpbmcsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNTdHJpbmdcbiAgKEJ1Y2tldCwgS2V5LCBVcGxvYWRJZCwgUGFydE51bWJlciwgcGF0aCkgLT5cbiAgICBtdWx0aXBhcnRQdXQgQnVja2V0LCBLZXksIFVwbG9hZElkLCBQYXJ0TnVtYmVyLFxuICAgICAgKGF3YWl0IHJlYWQgcGF0aCwgXCJidWZmZXJcIiksIChtaW1lLmdldFR5cGUgcGF0aClcblxuICAjIFB1dHRpbmcgYSBmaWxlIG9uIGRpc2sgdG8gUzMsIHdpdGggdHlwZSBvdmVycmlkZVxuICBNZXRob2QuZGVmaW5lIG11bHRpcGFydFB1dCwgaXNTdHJpbmcsIGlzU3RyaW5nLCBpc1N0cmluZywgaXNTdHJpbmcsIGlzU3RyaW5nXG4gIChCdWNrZXQsIEtleSwgVXBsb2FkSWQsIFBhcnROdW1iZXIsIHBhdGgpIC0+XG4gICAgbXVsdGlwYXJ0UHV0IEJ1Y2tldCwgS2V5LCBVcGxvYWRJZCwgUGFydE51bWJlcixcbiAgICAgIChhd2FpdCByZWFkIGZpbGUucGF0aCwgXCJidWZmZXJcIiksIGZpbGUudHlwZVxuXG4gIHttdWx0aXBhcnRTdGFydCwgbXVsdGlwYXJ0QWJvcnQsIG11bHRpcGFydENvbXBsZXRlLCBtdWx0aXBhcnRQdXR9XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb25cbiJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=/Users/david/repos/sundog/src/primitives/s3/object/multipart.coffee