"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _mime = _interopRequireDefault(require("mime"));

var _pandaParchment = require("panda-parchment");

var _pandaQuill = require("panda-quill");

var _helpers = require("../helpers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// Put would seem like a simple enough function, but there are lots of ways to
// use it.  This design is an attempt to control the combinatorics
// on the s3 object put feature.
var Section;

Section = function (s3) {
  var PUT, put;

  put = async function (Bucket, Key, options) {
    return await s3.putObject((0, _pandaParchment.merge)({
      Bucket,
      Key
    }, options));
  };

  PUT = {
    string: function (bucket, key, text, options = {}) {
      var Body, ContentMD5;
      Body = Buffer.from(text);
      ContentMD5 = (0, _helpers.md5)(Body);
      return put(bucket, key, (0, _pandaParchment.merge)({
        Body,
        ContentMD5
      }, options));
    },
    file: async function (bucket, key, path, options = {}) {
      var Body, ContentMD5, ContentType, ref;
      ContentType = (ref = options.ContentType) != null ? ref : _mime.default.getType(path);
      Body = /^text\//.test(ContentType) ? Buffer.from((await (0, _pandaQuill.read)(path))) : await (0, _pandaQuill.read)(path, "buffer");
      ContentMD5 = (0, _helpers.md5)(Body);
      return put(bucket, key, (0, _pandaParchment.merge)({
        Body,
        ContentType,
        ContentMD5
      }, options));
    },
    buffer: function (bucket, key, Body, options = {}) {
      var ContentMD5;
      ContentMD5 = (0, _helpers.md5)(Body);
      return put(bucket, key, (0, _pandaParchment.merge)({
        Body,
        ContentMD5
      }, options));
    }
  };
  return {
    PUT,
    put
  };
};

var _default = Section;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9zdW5kb2cvc3JjL3ByaW1pdGl2ZXMvczMvb2JqZWN0L3B1dC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUlBOztBQUNBOztBQUNBOztBQUVBOzs7O0FBUkE7OztBQUFBLElBQUEsT0FBQTs7QUFVQSxPQUFBLEdBQVUsVUFBQSxFQUFBLEVBQUE7QUFFUixNQUFBLEdBQUEsRUFBQSxHQUFBOztBQUFBLEVBQUEsR0FBQSxHQUFNLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsT0FBQSxFQUFBO0FBQ0osV0FBQSxNQUFNLEVBQUUsQ0FBRixTQUFBLENBQWEsMkJBQU07QUFBQSxNQUFBLE1BQUE7QUFBTixNQUFBO0FBQU0sS0FBTixFQUFuQixPQUFtQixDQUFiLENBQU47QUFESSxHQUFOOztBQUdBLEVBQUEsR0FBQSxHQUNFO0FBQUEsSUFBQSxNQUFBLEVBQVEsVUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBb0IsT0FBQSxHQUFwQixFQUFBLEVBQUE7QUFDTixVQUFBLElBQUEsRUFBQSxVQUFBO0FBQUEsTUFBQSxJQUFBLEdBQU8sTUFBTSxDQUFOLElBQUEsQ0FBQSxJQUFBLENBQVA7QUFDQSxNQUFBLFVBQUEsR0FBYSxrQkFBQSxJQUFBLENBQWI7YUFDQSxHQUFBLENBQUEsTUFBQSxFQUFBLEdBQUEsRUFBaUIsMkJBQU07QUFBQSxRQUFBLElBQUE7QUFBTixRQUFBO0FBQU0sT0FBTixFQUFqQixPQUFpQixDQUFqQixDO0FBSEYsS0FBQTtBQUtBLElBQUEsSUFBQSxFQUFNLGdCQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFvQixPQUFBLEdBQXBCLEVBQUEsRUFBQTtBQUNKLFVBQUEsSUFBQSxFQUFBLFVBQUEsRUFBQSxXQUFBLEVBQUEsR0FBQTtBQUFBLE1BQUEsV0FBQSxHQUFBLENBQUEsR0FBQSxHQUFBLE9BQUEsQ0FBQSxXQUFBLEtBQUEsSUFBQSxHQUFBLEdBQUEsR0FBb0MsY0FBQSxPQUFBLENBQUEsSUFBQSxDQUFwQztBQUVBLE1BQUEsSUFBQSxHQUNLLFVBQUEsSUFBQSxDQUFILFdBQUcsSUFDRCxNQUFNLENBQU4sSUFBQSxFQUFZLE1BQU0sc0JBRHBCLElBQ29CLENBQWxCLEVBREMsR0FHRCxNQUFNLHNCQUFBLElBQUEsRUFBTixRQUFNLENBSlY7QUFNQSxNQUFBLFVBQUEsR0FBYSxrQkFBQSxJQUFBLENBQWI7YUFFQSxHQUFBLENBQUEsTUFBQSxFQUFBLEdBQUEsRUFBaUIsMkJBQU07QUFBQSxRQUFBLElBQUE7QUFBQSxRQUFBLFdBQUE7QUFBTixRQUFBO0FBQU0sT0FBTixFQUFqQixPQUFpQixDQUFqQixDO0FBaEJGLEtBQUE7QUFrQkEsSUFBQSxNQUFBLEVBQVEsVUFBQSxNQUFBLEVBQUEsR0FBQSxFQUFBLElBQUEsRUFBb0IsT0FBQSxHQUFwQixFQUFBLEVBQUE7QUFDTixVQUFBLFVBQUE7QUFBQSxNQUFBLFVBQUEsR0FBYSxrQkFBQSxJQUFBLENBQWI7YUFDQSxHQUFBLENBQUEsTUFBQSxFQUFBLEdBQUEsRUFBaUIsMkJBQU07QUFBQSxRQUFBLElBQUE7QUFBTixRQUFBO0FBQU0sT0FBTixFQUFqQixPQUFpQixDQUFqQixDO0FBRk07QUFsQlIsR0FERjtTQXdCQTtBQUFBLElBQUEsR0FBQTtBQUFBLElBQUE7QUFBQSxHO0FBN0JRLENBQVY7O2VBK0JlLE8iLCJzb3VyY2VzQ29udGVudCI6WyIjIFB1dCB3b3VsZCBzZWVtIGxpa2UgYSBzaW1wbGUgZW5vdWdoIGZ1bmN0aW9uLCBidXQgdGhlcmUgYXJlIGxvdHMgb2Ygd2F5cyB0b1xuIyB1c2UgaXQuICBUaGlzIGRlc2lnbiBpcyBhbiBhdHRlbXB0IHRvIGNvbnRyb2wgdGhlIGNvbWJpbmF0b3JpY3NcbiMgb24gdGhlIHMzIG9iamVjdCBwdXQgZmVhdHVyZS5cblxuaW1wb3J0IG1pbWUgZnJvbSBcIm1pbWVcIlxuaW1wb3J0IHttZXJnZX0gZnJvbSBcInBhbmRhLXBhcmNobWVudFwiXG5pbXBvcnQge3JlYWR9IGZyb20gXCJwYW5kYS1xdWlsbFwiXG5cbmltcG9ydCB7bWQ1fSBmcm9tIFwiLi4vaGVscGVyc1wiXG5cblNlY3Rpb24gPSAoczMpIC0+XG5cbiAgcHV0ID0gKEJ1Y2tldCwgS2V5LCBvcHRpb25zKSAtPlxuICAgIGF3YWl0IHMzLnB1dE9iamVjdCBtZXJnZSB7QnVja2V0LCBLZXl9LCBvcHRpb25zXG5cbiAgUFVUID1cbiAgICBzdHJpbmc6IChidWNrZXQsIGtleSwgdGV4dCwgb3B0aW9ucz17fSkgLT5cbiAgICAgIEJvZHkgPSBCdWZmZXIuZnJvbSB0ZXh0XG4gICAgICBDb250ZW50TUQ1ID0gbWQ1IEJvZHlcbiAgICAgIHB1dCBidWNrZXQsIGtleSwgbWVyZ2Uge0JvZHksIENvbnRlbnRNRDV9LCBvcHRpb25zXG5cbiAgICBmaWxlOiAoYnVja2V0LCBrZXksIHBhdGgsIG9wdGlvbnM9e30pIC0+XG4gICAgICBDb250ZW50VHlwZSA9IG9wdGlvbnMuQ29udGVudFR5cGUgPyBtaW1lLmdldFR5cGUgcGF0aFxuXG4gICAgICBCb2R5ID1cbiAgICAgICAgaWYgL150ZXh0XFwvLy50ZXN0IENvbnRlbnRUeXBlXG4gICAgICAgICAgQnVmZmVyLmZyb20gYXdhaXQgcmVhZCBwYXRoXG4gICAgICAgIGVsc2VcbiAgICAgICAgICBhd2FpdCByZWFkIHBhdGgsIFwiYnVmZmVyXCJcblxuICAgICAgQ29udGVudE1ENSA9IG1kNSBCb2R5XG5cbiAgICAgIHB1dCBidWNrZXQsIGtleSwgbWVyZ2Uge0JvZHksIENvbnRlbnRUeXBlLCBDb250ZW50TUQ1fSwgb3B0aW9uc1xuXG4gICAgYnVmZmVyOiAoYnVja2V0LCBrZXksIEJvZHksIG9wdGlvbnM9e30pIC0+XG4gICAgICBDb250ZW50TUQ1ID0gbWQ1IEJvZHlcbiAgICAgIHB1dCBidWNrZXQsIGtleSwgbWVyZ2Uge0JvZHksIENvbnRlbnRNRDV9LCBvcHRpb25zXG5cblxuICB7UFVULCBwdXR9XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb25cbiJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=/Users/david/repos/sundog/src/primitives/s3/object/put.coffee