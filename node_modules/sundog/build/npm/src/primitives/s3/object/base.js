"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _pandaParchment = require("panda-parchment");

var _privateUtils = require("../../private-utils");

var Section;

Section = function (s3) {
  var deleteBatch, destroy, exists, get, head, list;

  head = exists = async function (name, key) {
    var e;

    try {
      return await s3.headObject({
        Bucket: name,
        Key: key
      });
    } catch (error) {
      e = error;
      return (0, _privateUtils.notFound)(e);
    }
  };

  get = async function (name, key, encoding = "utf8") {
    var Body, e;

    try {
      ({
        Body
      } = await s3.getObject({
        Bucket: name,
        Key: key
      }));

      if (encoding === "binary") {
        return Body;
      } else {
        return Body.toString(encoding);
      }
    } catch (error) {
      e = error;
      return (0, _privateUtils.notFound)(e);
    }
  };

  destroy = async function (name, key) {
    var e;

    try {
      return await s3.deleteObject({
        Bucket: name,
        Key: key
      });
    } catch (error) {
      e = error;
      return (0, _privateUtils.notFound)(e);
    }
  };

  deleteBatch = async function (name, keys) {
    var key;
    return await s3.deleteObjects({
      Bucket: name,
      Delete: {
        Objects: function () {
          var i, len, results;
          results = [];

          for (i = 0, len = keys.length; i < len; i++) {
            key = keys[i];
            results.push({
              Key: key
            });
          }

          return results;
        }(),
        Quiet: true
      }
    });
  };

  list = async function (name, items = [], marker) {
    var Contents, IsTruncated, NextContinuationToken, p;
    p = {
      Bucket: name,
      MaxKeys: 1000
    };

    if (marker) {
      p.ContinuationToken = marker;
    }

    ({
      IsTruncated,
      Contents,
      NextContinuationToken
    } = await s3.listObjectsV2(p));

    if (IsTruncated) {
      items = (0, _pandaParchment.cat)(items, Contents);
      return await list(name, items, NextContinuationToken);
    } else {
      return (0, _pandaParchment.cat)(items, Contents);
    }
  };

  return {
    head,
    exists,
    get,
    delete: destroy,
    deleteBatch,
    list
  };
};

var _default = Section;
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9kYXZpZC9yZXBvcy9zdW5kb2cvc3JjL3ByaW1pdGl2ZXMvczMvb2JqZWN0L2Jhc2UuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFEQSxJQUFBLE9BQUE7O0FBSUEsT0FBQSxHQUFVLFVBQUEsRUFBQSxFQUFBO0FBQ1IsTUFBQSxXQUFBLEVBQUEsT0FBQSxFQUFBLE1BQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLElBQUE7O0FBQUEsRUFBQSxJQUFBLEdBQU8sTUFBQSxHQUFTLGdCQUFBLElBQUEsRUFBQSxHQUFBLEVBQUE7QUFDZCxRQUFBLENBQUE7O0FBQUEsUUFBQTtBQUNFLGFBQUEsTUFBTSxFQUFFLENBQUYsVUFBQSxDQUFjO0FBQUMsUUFBQSxNQUFBLEVBQUQsSUFBQTtBQUFlLFFBQUEsR0FBQSxFQUFLO0FBQXBCLE9BQWQsQ0FBTjtBQURGLEtBQUEsQ0FBQSxPQUFBLEtBQUEsRUFBQTtBQUVNLE1BQUEsQ0FBQSxHQUFBLEtBQUE7YUFDSiw0QkFIRixDQUdFLEM7O0FBSlksR0FBaEI7O0FBTUEsRUFBQSxHQUFBLEdBQU0sZ0JBQUEsSUFBQSxFQUFBLEdBQUEsRUFBWSxRQUFBLEdBQVosTUFBQSxFQUFBO0FBQ0osUUFBQSxJQUFBLEVBQUEsQ0FBQTs7QUFBQSxRQUFBO0FBQ0UsT0FBQTtBQUFBLFFBQUE7QUFBQSxVQUFTLE1BQU0sRUFBRSxDQUFGLFNBQUEsQ0FBYTtBQUFDLFFBQUEsTUFBQSxFQUFELElBQUE7QUFBZSxRQUFBLEdBQUEsRUFBSztBQUFwQixPQUFiLENBQWY7O0FBQ0EsVUFBRyxRQUFBLEtBQUgsUUFBQSxFQUFBO2VBQUEsSTtBQUFBLE9BQUEsTUFBQTtlQUdFLElBQUksQ0FBSixRQUFBLENBSEYsUUFHRSxDO0FBTEo7QUFBQSxLQUFBLENBQUEsT0FBQSxLQUFBLEVBQUE7QUFNTSxNQUFBLENBQUEsR0FBQSxLQUFBO2FBQ0osNEJBUEYsQ0FPRSxDOztBQVJFLEdBQU47O0FBVUEsRUFBQSxPQUFBLEdBQVUsZ0JBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQTtBQUNSLFFBQUEsQ0FBQTs7QUFBQSxRQUFBO0FBQ0UsYUFBQSxNQUFNLEVBQUUsQ0FBRixZQUFBLENBQWdCO0FBQUMsUUFBQSxNQUFBLEVBQUQsSUFBQTtBQUFlLFFBQUEsR0FBQSxFQUFLO0FBQXBCLE9BQWhCLENBQU47QUFERixLQUFBLENBQUEsT0FBQSxLQUFBLEVBQUE7QUFFTSxNQUFBLENBQUEsR0FBQSxLQUFBO2FBQ0osNEJBSEYsQ0FHRSxDOztBQUpNLEdBQVY7O0FBTUEsRUFBQSxXQUFBLEdBQWMsZ0JBQUEsSUFBQSxFQUFBLElBQUEsRUFBQTtBQUNaLFFBQUEsR0FBQTtBQUFBLFdBQUEsTUFBTSxFQUFFLENBQUYsYUFBQSxDQUNKO0FBQUEsTUFBQSxNQUFBLEVBQUEsSUFBQTtBQUNBLE1BQUEsTUFBQSxFQUNFO0FBQUEsUUFBQSxPQUFBLEVBQUEsWUFBQTs7QUFBbUIsVUFBQSxPQUFBLEdBQUEsRUFBQTs7QUFBQSxlQUFBLENBQUEsR0FBQSxDQUFBLEVBQUEsR0FBQSxHQUFBLElBQUEsQ0FBQSxNQUFBLEVBQUEsQ0FBQSxHQUFBLEdBQUEsRUFBQSxDQUFBLEVBQUEsRUFBQTs7eUJBQVQ7QUFBQSxjQUFBLEdBQUEsRUFBSztBQUFMLGE7QUFBUzs7O0FBQW5CLFNBQUEsRUFBQTtBQUNBLFFBQUEsS0FBQSxFQUFPO0FBRFA7QUFGRixLQURJLENBQU47QUFEWSxHQUFkOztBQU9BLEVBQUEsSUFBQSxHQUFPLGdCQUFBLElBQUEsRUFBTyxLQUFBLEdBQVAsRUFBQSxFQUFBLE1BQUEsRUFBQTtBQUNMLFFBQUEsUUFBQSxFQUFBLFdBQUEsRUFBQSxxQkFBQSxFQUFBLENBQUE7QUFBQSxJQUFBLENBQUEsR0FBSTtBQUFDLE1BQUEsTUFBQSxFQUFELElBQUE7QUFBZSxNQUFBLE9BQUEsRUFBUztBQUF4QixLQUFKOztBQUNBLFFBQUEsTUFBQSxFQUFBO0FBQUEsTUFBQSxDQUFDLENBQUQsaUJBQUEsR0FBQSxNQUFBOzs7QUFFQSxLQUFBO0FBQUEsTUFBQSxXQUFBO0FBQUEsTUFBQSxRQUFBO0FBQUEsTUFBQTtBQUFBLFFBQWlELE1BQU0sRUFBRSxDQUFGLGFBQUEsQ0FBdkQsQ0FBdUQsQ0FBdkQ7O0FBQ0EsUUFBQSxXQUFBLEVBQUE7QUFDRSxNQUFBLEtBQUEsR0FBUSx5QkFBQSxLQUFBLEVBQUEsUUFBQSxDQUFSO0FBQ0EsYUFBQSxNQUFNLElBQUEsQ0FBQSxJQUFBLEVBQUEsS0FBQSxFQUZSLHFCQUVRLENBQU47QUFGRixLQUFBLE1BQUE7YUFJRSx5QkFBQSxLQUFBLEVBSkYsUUFJRSxDOztBQVRHLEdBQVA7O1NBV0E7QUFBQSxJQUFBLElBQUE7QUFBQSxJQUFBLE1BQUE7QUFBQSxJQUFBLEdBQUE7QUFBb0IsSUFBQSxNQUFBLEVBQXBCLE9BQUE7QUFBQSxJQUFBLFdBQUE7QUFBa0QsSUFBQTtBQUFsRCxHO0FBekNRLENBQVY7O2VBMkNlLE8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge2NhdH0gZnJvbSBcInBhbmRhLXBhcmNobWVudFwiXG5pbXBvcnQge25vdEZvdW5kfSBmcm9tIFwiLi4vLi4vcHJpdmF0ZS11dGlsc1wiXG5cblxuU2VjdGlvbiA9IChzMykgLT5cbiAgaGVhZCA9IGV4aXN0cyA9IChuYW1lLCBrZXkpIC0+XG4gICAgdHJ5XG4gICAgICBhd2FpdCBzMy5oZWFkT2JqZWN0IHtCdWNrZXQ6IG5hbWUsIEtleToga2V5fVxuICAgIGNhdGNoIGVcbiAgICAgIG5vdEZvdW5kIGVcblxuICBnZXQgPSAobmFtZSwga2V5LCBlbmNvZGluZz1cInV0ZjhcIikgLT5cbiAgICB0cnlcbiAgICAgIHtCb2R5fSA9IGF3YWl0IHMzLmdldE9iamVjdCB7QnVja2V0OiBuYW1lLCBLZXk6IGtleX1cbiAgICAgIGlmIGVuY29kaW5nID09IFwiYmluYXJ5XCJcbiAgICAgICAgQm9keVxuICAgICAgZWxzZVxuICAgICAgICBCb2R5LnRvU3RyaW5nIGVuY29kaW5nXG4gICAgY2F0Y2ggZVxuICAgICAgbm90Rm91bmQgZVxuXG4gIGRlc3Ryb3kgPSAobmFtZSwga2V5KSAtPlxuICAgIHRyeVxuICAgICAgYXdhaXQgczMuZGVsZXRlT2JqZWN0IHtCdWNrZXQ6IG5hbWUsIEtleToga2V5fVxuICAgIGNhdGNoIGVcbiAgICAgIG5vdEZvdW5kIGVcblxuICBkZWxldGVCYXRjaCA9IChuYW1lLCBrZXlzKSAtPlxuICAgIGF3YWl0IHMzLmRlbGV0ZU9iamVjdHNcbiAgICAgIEJ1Y2tldDogbmFtZVxuICAgICAgRGVsZXRlOlxuICAgICAgICBPYmplY3RzOiAoS2V5OiBrZXkgZm9yIGtleSBpbiBrZXlzKVxuICAgICAgICBRdWlldDogdHJ1ZVxuXG4gIGxpc3QgPSAobmFtZSwgaXRlbXM9W10sIG1hcmtlcikgLT5cbiAgICBwID0ge0J1Y2tldDogbmFtZSwgTWF4S2V5czogMTAwMH1cbiAgICBwLkNvbnRpbnVhdGlvblRva2VuID0gbWFya2VyIGlmIG1hcmtlclxuXG4gICAge0lzVHJ1bmNhdGVkLCBDb250ZW50cywgTmV4dENvbnRpbnVhdGlvblRva2VufSA9IGF3YWl0IHMzLmxpc3RPYmplY3RzVjIgcFxuICAgIGlmIElzVHJ1bmNhdGVkXG4gICAgICBpdGVtcyA9IGNhdCBpdGVtcywgQ29udGVudHNcbiAgICAgIGF3YWl0IGxpc3QgbmFtZSwgaXRlbXMsIE5leHRDb250aW51YXRpb25Ub2tlblxuICAgIGVsc2VcbiAgICAgIGNhdCBpdGVtcywgQ29udGVudHNcblxuICB7aGVhZCwgZXhpc3RzLCBnZXQsIGRlbGV0ZTogZGVzdHJveSwgZGVsZXRlQmF0Y2gsIGxpc3R9XG5cbmV4cG9ydCBkZWZhdWx0IFNlY3Rpb25cbiJdLCJzb3VyY2VSb290IjoiIn0=
//# sourceURL=/Users/david/repos/sundog/src/primitives/s3/object/base.coffee