var i,
    len,
    modules,
    ref,
    target,
    targets,
    indexOf = [].indexOf;
import { print, test, success } from "amen";
import { default as iterators } from "./iterator";
import { default as reactors } from "./reactor";
import { default as adapters } from "./adapters";
import { default as filters } from "./filters";
import { default as reducers } from "./reducers";
import { // test to make sure top-level import works
iterator } from "../src/index"; // modules = { iterators, reactors, adapters, filters }

modules = {
  iterators,
  reactors,
  adapters,
  filters,
  reducers
};
targets = (ref = process.env.PANDA_RIVER_TARGETS) != null ? ref.split(/\s+/) : void 0;

if (targets == null) {
  targets = [];
}

for (i = 0, len = targets.length; i < len; i++) {
  target = targets[i];

  if (!(modules[target] == null)) {
    continue;
  }

  console.error(`invalid target: '${target}'`);
  process.exit(-1);
}

target = function (module) {
  return targets.length === 0 || indexOf.call(targets, module) >= 0;
};

(async function () {
  var module, name;
  print((await test("Panda River", function () {
    var results;
    results = [];

    for (name in modules) {
      module = modules[name];

      if (target(name)) {
        results.push(test(name, module));
      }
    }

    return results;
  }())));
  return process.exit(success ? 0 : 1);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtcml2ZXIvdGVzdC9pbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsSUFBQSxDQUFBO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQSxPQUFBO0FBQUEsSUFBQSxHQUFBO0FBQUEsSUFBQSxNQUFBO0FBQUEsSUFBQSxPQUFBO0FBQUEsSUFBQSxPQUFBLEdBQUEsR0FBQSxPQUFBO0FBQUEsU0FBQSxLQUFBLEVBQUEsSUFBQSxFQUFBLE9BQUEsUUFBQSxNQUFBO0FBQ0EsU0FBUSxPQUFBLElBQVIsU0FBQSxRQUFBLFlBQUE7QUFDQSxTQUFRLE9BQUEsSUFBUixRQUFBLFFBQUEsV0FBQTtBQUNBLFNBQVEsT0FBQSxJQUFSLFFBQUEsUUFBQSxZQUFBO0FBQ0EsU0FBUSxPQUFBLElBQVIsT0FBQSxRQUFBLFdBQUE7QUFDQSxTQUFRLE9BQUEsSUFBUixRQUFBLFFBQUEsWUFBQTtBQUdBLFM7QUFBQSxRQUFBLFFBUkEsY0FRQSxDOztBQUdBLE9BQUEsR0FBVTtBQUFBLEVBQUEsU0FBQTtBQUFBLEVBQUEsUUFBQTtBQUFBLEVBQUEsUUFBQTtBQUFBLEVBQUEsT0FBQTtBQUFBLEVBQUE7QUFBQSxDQUFWO0FBQ0EsT0FBQSxHQUFBLENBQUEsR0FBQSxHQUFBLE9BQUEsQ0FBQSxHQUFBLENBQUEsbUJBQUEsS0FBQSxJQUFBLEdBQUEsR0FBeUMsQ0FBL0IsS0FBVixDQUFVLEtBQVYsQ0FBQSxHQUFVLEtBQUEsQ0FBVjs7O0FBQ0EsRUFBQSxPQUFBLEdBQVcsRUFBWDs7O0FBRUEsS0FBQSxDQUFBLEdBQUEsQ0FBQSxFQUFBLEdBQUEsR0FBQSxPQUFBLENBQUEsTUFBQSxFQUFBLENBQUEsR0FBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLEVBQUE7OztRQUE0QixPQUFBLENBQUEsTUFBQSxDQUFBLElBQUEsSSxHQUFBOzs7O0FBQzFCLEVBQUEsT0FBTyxDQUFQLEtBQUEsQ0FBYyxvQkFBQSxNQUFkLEdBQUE7QUFDQSxFQUFBLE9BQU8sQ0FBUCxJQUFBLENBQWEsQ0FBYixDQUFBO0FBRkY7O0FBSUEsTUFBQSxHQUFTLFVBQUEsTUFBQSxFQUFBO1NBQVksT0FBTyxDQUFQLE1BQUEsS0FBQSxDQUFBLElBQXdCLE9BQUEsQ0FBQSxJQUFBLENBQUEsT0FBQSxFQUFBLE1BQUEsS0FBRCxDO0FBQW5DLENBQVQ7O0FBRUcsQ0FBQSxrQkFBQTtBQUNELE1BQUEsTUFBQSxFQUFBLElBQUE7QUFBQSxFQUFBLEtBQUEsRUFBTSxNQUFNLElBQUEsQ0FBQSxhQUFBLEVBQUEsWUFBQTs7QUFDVSxJQUFBLE9BQUEsR0FBQSxFQUFBOztBQUFBLFNBQUEsSUFBQSxJQUFBLE9BQUEsRUFBQTs7O1VBQWlDLE1BQUEsQ0FBQSxJQUFBLEMsRUFBQTtxQkFBcEQsSUFBQSxDQUFBLElBQUEsRUFBQSxNQUFBLEM7O0FBQW1COzs7QUFEdEIsR0FBWSxFQUFBLENBQVosRUFBQTtTQUdBLE9BQU8sQ0FBUCxJQUFBLENBQWdCLE9BQUgsR0FBQSxDQUFBLEdBQWIsQ0FBQSxDO0FBSkYsQ0FBRyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7cHJpbnQsIHRlc3QsIHN1Y2Nlc3N9IGZyb20gXCJhbWVuXCJcbmltcG9ydCB7ZGVmYXVsdCBhcyBpdGVyYXRvcnN9IGZyb20gXCIuL2l0ZXJhdG9yXCJcbmltcG9ydCB7ZGVmYXVsdCBhcyByZWFjdG9yc30gZnJvbSBcIi4vcmVhY3RvclwiXG5pbXBvcnQge2RlZmF1bHQgYXMgYWRhcHRlcnN9IGZyb20gXCIuL2FkYXB0ZXJzXCJcbmltcG9ydCB7ZGVmYXVsdCBhcyBmaWx0ZXJzfSBmcm9tIFwiLi9maWx0ZXJzXCJcbmltcG9ydCB7ZGVmYXVsdCBhcyByZWR1Y2Vyc30gZnJvbSBcIi4vcmVkdWNlcnNcIlxuXG4jIHRlc3QgdG8gbWFrZSBzdXJlIHRvcC1sZXZlbCBpbXBvcnQgd29ya3NcbmltcG9ydCB7aXRlcmF0b3J9IGZyb20gXCIuLi9zcmMvaW5kZXhcIlxuXG4jIG1vZHVsZXMgPSB7IGl0ZXJhdG9ycywgcmVhY3RvcnMsIGFkYXB0ZXJzLCBmaWx0ZXJzIH1cbm1vZHVsZXMgPSB7IGl0ZXJhdG9ycywgcmVhY3RvcnMsIGFkYXB0ZXJzLCBmaWx0ZXJzLCByZWR1Y2VycyB9XG50YXJnZXRzID0gcHJvY2Vzcy5lbnYuUEFOREFfUklWRVJfVEFSR0VUUz8uc3BsaXQgL1xccysvXG50YXJnZXRzID89IFtdXG5cbmZvciB0YXJnZXQgaW4gdGFyZ2V0cyB3aGVuICFtb2R1bGVzW3RhcmdldF0/XG4gIGNvbnNvbGUuZXJyb3IgXCJpbnZhbGlkIHRhcmdldDogJyN7dGFyZ2V0fSdcIlxuICBwcm9jZXNzLmV4aXQgLTFcblxudGFyZ2V0ID0gKG1vZHVsZSkgLT4gdGFyZ2V0cy5sZW5ndGggPT0gMCB8fCAobW9kdWxlIGluIHRhcmdldHMpXG5cbmRvIC0+XG4gIHByaW50IGF3YWl0IHRlc3QgXCJQYW5kYSBSaXZlclwiLFxuICAgICh0ZXN0IG5hbWUsIG1vZHVsZSkgZm9yIG5hbWUsIG1vZHVsZSBvZiBtb2R1bGVzIHdoZW4gdGFyZ2V0IG5hbWVcblxuICBwcm9jZXNzLmV4aXQgaWYgc3VjY2VzcyB0aGVuIDAgZWxzZSAxXG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=/Users/dyoder/repos/panda-river/test/index.coffee