"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isReactor = exports.reactor = exports.isReagent = void 0;

var _pandaGarden = require("panda-garden");

var _pandaGenerics = require("panda-generics");

var _pandaParchment = require("panda-parchment");

function _awaitAsyncGenerator(value) { return new _AwaitValue(value); }

function _wrapAsyncGenerator(fn) { return function () { return new _AsyncGenerator(fn.apply(this, arguments)); }; }

function _AsyncGenerator(gen) { var front, back; function send(key, arg) { return new Promise(function (resolve, reject) { var request = { key: key, arg: arg, resolve: resolve, reject: reject, next: null }; if (back) { back = back.next = request; } else { front = back = request; resume(key, arg); } }); } function resume(key, arg) { try { var result = gen[key](arg); var value = result.value; var wrappedAwait = value instanceof _AwaitValue; Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) { if (wrappedAwait) { resume("next", arg); return; } settle(result.done ? "return" : "normal", arg); }, function (err) { resume("throw", err); }); } catch (err) { settle("throw", err); } } function settle(type, value) { switch (type) { case "return": front.resolve({ value: value, done: true }); break; case "throw": front.reject(value); break; default: front.resolve({ value: value, done: false }); break; } front = front.next; if (front) { resume(front.key, front.arg); } else { back = null; } } this._invoke = send; if (typeof gen.return !== "function") { this.return = undefined; } }

if (typeof Symbol === "function" && Symbol.asyncIterator) { _AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; }; }

_AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };

_AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };

_AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };

function _AwaitValue(value) { this.wrapped = value; }

var asyncIterator, isAsyncGeneratorFunction, isAsyncIterable, isAsyncIterator, isReactor, isReagent, reactor;
exports.reactor = reactor;
exports.isReagent = isReagent;
exports.isReactor = isReactor;

if (Symbol.asyncIterator == null) {
  Symbol.asyncIterator = Symbol("asyncIterator");
}

isAsyncGeneratorFunction = function () {
  var f;

  f =
  /*#__PURE__*/
  function () {
    var _ref = _wrapAsyncGenerator(function* () {
      return yield null;
    });

    return function f() {
      return _ref.apply(this, arguments);
    };
  }();

  return (0, _pandaParchment.isType)(f.constructor);
}();

exports.isReagent = isReagent = isAsyncIterable = function (x) {
  return (0, _pandaParchment.isFunction)(x != null ? x[Symbol.asyncIterator] : void 0) || isAsyncGeneratorFunction(x);
};

exports.isReactor = isReactor = isAsyncIterator = function (x) {
  return (0, _pandaParchment.isFunction)(x != null ? x.next : void 0) && isReagent(x);
};

exports.reactor = reactor = asyncIterator = _pandaGenerics.Method.create({
  default: "unable to create reactor from value"
});

_pandaGenerics.Method.define(reactor, _pandaParchment.isFunction, function (f) {
  return {
    next: f,
    [Symbol.asyncIterator]: function () {
      return this;
    }
  };
});

_pandaGenerics.Method.define(reactor, isReagent, function (r) {
  return r[Symbol.asyncIterator]();
});

_pandaGenerics.Method.define(reactor, isAsyncGeneratorFunction, function (g) {
  return g();
});

_pandaGenerics.Method.define(reactor, isReactor, function (r) {
  return r;
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtcml2ZXIvc3JjL3JlYWN0b3IuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBRkEsSUFBQSxhQUFBLEVBQUEsd0JBQUEsRUFBQSxlQUFBLEVBQUEsZUFBQSxFQUFBLFNBQUEsRUFBQSxTQUFBLEVBQUEsT0FBQTs7Ozs7O0FBSUEsRUFBQSxNQUFNLENBQUMsYUFBUCxHQUF3QixNQUFBLENBQUEsZUFBQSxDQUF4Qjs7O0FBRUEsd0JBQUEsR0FBOEIsWUFBQTtBQUM1QixNQUFBLENBQUE7O0FBQUEsRUFBQSxDQUFBO0FBQUE7QUFBQTtBQUFBLG1DQUFJLGFBQUE7QUFBRyxhQUFBLE1BQUEsSUFBQTtBQUFILEtBQUo7O0FBQUE7QUFBQTtBQUFBO0FBQUEsS0FBQTs7U0FDQSw0QkFBTyxDQUFDLENBQVIsV0FBQSxDO0FBRnlCLENBQUcsRUFBOUI7O0FBSUEsb0JBQUEsU0FBQSxHQUFZLGVBQUEsR0FBa0IsVUFBQSxDQUFBLEVBQUE7U0FDM0IsZ0NBQUEsQ0FBQSxJQUFBLElBQUEsR0FBVyxDQUFHLENBQUEsTUFBTSxDQUFOLGFBQUEsQ0FBZCxHQUFjLEtBQWYsQ0FBQyxDQUFELElBQTBDLHdCQUFBLENBQUQsQ0FBQyxDO0FBRGQsQ0FBOUI7O0FBR0Esb0JBQUEsU0FBQSxHQUFZLGVBQUEsR0FBa0IsVUFBQSxDQUFBLEVBQUE7U0FBUSxnQ0FBQSxDQUFBLElBQUEsSUFBQSxHQUFXLENBQUMsQ0FBRSxJQUFkLEdBQWMsS0FBZixDQUFDLENBQUQsSUFBeUIsU0FBQSxDQUFELENBQUMsQztBQUFoQyxDQUE5Qjs7QUFFQSxrQkFBQSxPQUFBLEdBQVUsYUFBQSxHQUFnQixzQkFBQSxNQUFBLENBQ3hCO0FBQUEsRUFBQSxPQUFBLEVBQVM7QUFBVCxDQUR3QixDQUExQjs7QUFHQSxzQkFBQSxNQUFBLENBQUEsT0FBQSxFQUFBLDBCQUFBLEVBQW1DLFVBQUEsQ0FBQSxFQUFBO1NBQ2pDO0FBQUEsSUFBQSxJQUFBLEVBQUEsQ0FBQTtBQUNBLEtBQUMsTUFBTSxDQUFQLGFBQUEsR0FBd0IsWUFBQTthQUFHLEk7QUFBSDtBQUR4QixHO0FBREYsQ0FBQTs7QUFJQSxzQkFBQSxNQUFBLENBQUEsT0FBQSxFQUFBLFNBQUEsRUFBa0MsVUFBQSxDQUFBLEVBQUE7U0FBTyxDQUFFLENBQUEsTUFBTSxDQUFSLGFBQUUsQ0FBRixFO0FBQXpDLENBQUE7O0FBRUEsc0JBQUEsTUFBQSxDQUFBLE9BQUEsRUFBQSx3QkFBQSxFQUFpRCxVQUFBLENBQUEsRUFBQTtTQUFPLENBQUEsRTtBQUF4RCxDQUFBOztBQUVBLHNCQUFBLE1BQUEsQ0FBQSxPQUFBLEVBQUEsU0FBQSxFQUFrQyxVQUFBLENBQUEsRUFBQTtTQUFPLEM7QUFBekMsQ0FBQSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7aWRlbnRpdHksIGN1cnJ5LCBiaW5hcnksIG5lZ2F0ZX0gZnJvbSBcInBhbmRhLWdhcmRlblwiXG5pbXBvcnQge01ldGhvZH0gZnJvbSBcInBhbmRhLWdlbmVyaWNzXCJcbmltcG9ydCB7aXNGdW5jdGlvbiwgaXNUeXBlfSBmcm9tIFwicGFuZGEtcGFyY2htZW50XCJcblxuU3ltYm9sLmFzeW5jSXRlcmF0b3IgPz0gU3ltYm9sIFwiYXN5bmNJdGVyYXRvclwiXG5cbmlzQXN5bmNHZW5lcmF0b3JGdW5jdGlvbiA9IGRvIC0+XG4gIGYgPSAtPiB5aWVsZCBhd2FpdCBudWxsXG4gIGlzVHlwZSBmLmNvbnN0cnVjdG9yXG5cbmlzUmVhZ2VudCA9IGlzQXN5bmNJdGVyYWJsZSA9ICh4KSAtPlxuICAoaXNGdW5jdGlvbiB4P1tTeW1ib2wuYXN5bmNJdGVyYXRvcl0pIHx8IChpc0FzeW5jR2VuZXJhdG9yRnVuY3Rpb24geClcblxuaXNSZWFjdG9yID0gaXNBc3luY0l0ZXJhdG9yID0gKHgpIC0+IChpc0Z1bmN0aW9uIHg/Lm5leHQpICYmIChpc1JlYWdlbnQgeClcblxucmVhY3RvciA9IGFzeW5jSXRlcmF0b3IgPSBNZXRob2QuY3JlYXRlXG4gIGRlZmF1bHQ6IFwidW5hYmxlIHRvIGNyZWF0ZSByZWFjdG9yIGZyb20gdmFsdWVcIlxuXG5NZXRob2QuZGVmaW5lIHJlYWN0b3IsIGlzRnVuY3Rpb24sIChmKSAtPlxuICBuZXh0OiBmXG4gIFtTeW1ib2wuYXN5bmNJdGVyYXRvcl06IC0+IEBcblxuTWV0aG9kLmRlZmluZSByZWFjdG9yLCBpc1JlYWdlbnQsIChyKSAtPiByW1N5bWJvbC5hc3luY0l0ZXJhdG9yXSgpXG5cbk1ldGhvZC5kZWZpbmUgcmVhY3RvciwgaXNBc3luY0dlbmVyYXRvckZ1bmN0aW9uLCAoZykgLT4gZygpXG5cbk1ldGhvZC5kZWZpbmUgcmVhY3RvciwgaXNSZWFjdG9yLCAocikgLT4gclxuXG5leHBvcnQge2lzUmVhZ2VudCwgcmVhY3RvciwgaXNSZWFjdG9yfVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/dyoder/repos/panda-river/src/reactor.coffee