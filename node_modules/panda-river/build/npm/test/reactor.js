"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _amen = require("amen");

var _iterator2 = require("../src/iterator");

var _reactor = require("../src/reactor");

function _awaitAsyncGenerator(value) { return new _AwaitValue(value); }

function _wrapAsyncGenerator(fn) { return function () { return new _AsyncGenerator(fn.apply(this, arguments)); }; }

function _AsyncGenerator(gen) { var front, back; function send(key, arg) { return new Promise(function (resolve, reject) { var request = { key: key, arg: arg, resolve: resolve, reject: reject, next: null }; if (back) { back = back.next = request; } else { front = back = request; resume(key, arg); } }); } function resume(key, arg) { try { var result = gen[key](arg); var value = result.value; var wrappedAwait = value instanceof _AwaitValue; Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) { if (wrappedAwait) { resume("next", arg); return; } settle(result.done ? "return" : "normal", arg); }, function (err) { resume("throw", err); }); } catch (err) { settle("throw", err); } } function settle(type, value) { switch (type) { case "return": front.resolve({ value: value, done: true }); break; case "throw": front.reject(value); break; default: front.resolve({ value: value, done: false }); break; } front = front.next; if (front) { resume(front.key, front.arg); } else { back = null; } } this._invoke = send; if (typeof gen.return !== "function") { this.return = undefined; } }

if (typeof Symbol === "function" && Symbol.asyncIterator) { _AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; }; }

_AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };

_AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };

_AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };

function _AwaitValue(value) { this.wrapped = value; }

function _asyncIterator(iterable) { var method; if (typeof Symbol === "function") { if (Symbol.asyncIterator) { method = iterable[Symbol.asyncIterator]; if (method != null) return method.call(iterable); } if (Symbol.iterator) { method = iterable[Symbol.iterator]; if (method != null) return method.call(iterable); } } throw new TypeError("Object is not async iterable"); }

var assert, f;
assert = require("assert");

f =
/*#__PURE__*/
function () {
  var _ref = _wrapAsyncGenerator(function* () {
    var ref, results, x;
    ref = [1, 2];
    results = [];
    var _iteratorNormalCompletion = true;
    var _didIteratorError = false;

    var _iteratorError;

    try {
      for (var _iterator = _asyncIterator(ref), _step, _value; _step = yield _awaitAsyncGenerator(_iterator.next()), _iteratorNormalCompletion = _step.done, _value = yield _awaitAsyncGenerator(_step.value), !_iteratorNormalCompletion; _iteratorNormalCompletion = true) {
        x = _value;
        results.push((yield x));
      }
    } catch (err) {
      _didIteratorError = true;
      _iteratorError = err;
    } finally {
      try {
        if (!_iteratorNormalCompletion && _iterator.return != null) {
          yield _awaitAsyncGenerator(_iterator.return());
        }
      } finally {
        if (_didIteratorError) {
          throw _iteratorError;
        }
      }
    }

    return results;
  });

  return function f() {
    return _ref.apply(this, arguments);
  };
}();

var _default = [(0, _amen.test)("isReagent", function () {
  return assert((0, _reactor.isReagent)({
    [Symbol.asyncIterator]: function () {}
  }));
}), (0, _amen.test)("isReactor", function () {
  return assert((0, _reactor.isReactor)((0, _reactor.reactor)(f)));
}), (0, _amen.test)("reactor/next/value/isDone", async function () {
  var r;
  r = f();
  assert(1 === (0, _iterator2.value)((await (0, _iterator2.next)(r))));
  assert(2 === (0, _iterator2.value)((await (0, _iterator2.next)(r))));
  return assert((0, _iterator2.isDone)((await (0, _iterator2.next)(r))));
})];
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtcml2ZXIvdGVzdC9yZWFjdG9yLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBSEEsSUFBQSxNQUFBLEVBQUEsQ0FBQTtBQUFBLE1BQUEsR0FBUyxPQUFBLENBQUEsUUFBQSxDQUFUOztBQUtBLENBQUE7QUFBQTtBQUFBO0FBQUEsaUNBQUksYUFBQTtBQUFHLFFBQUEsR0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBO0FBQVEsSUFBQSxHQUFBLEdBQUEsQ0FBQSxDQUFBLEVBQUEsQ0FBQSxDQUFBO0FBQUEsSUFBQSxPQUFBLEdBQUEsRUFBQTtBQUFYO0FBQUE7O0FBQUE7O0FBQUE7QUFBVywwQ0FBQSxHQUFBLGdPQUFBO0FBQUEsUUFBQSxDQUFBO2dCQUFSLEksRUFBQSxNQUFBLEM7QUFBUTtBQUFYO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7OztBQUFBLEdBQUo7O0FBQUE7QUFBQTtBQUFBO0FBQUEsR0FBQTs7ZUFDZSxDQUViLGdCQUFBLFdBQUEsRUFBa0IsWUFBQTtTQUNoQixNQUFBLENBQU8sd0JBQVU7QUFBQSxLQUFDLE1BQU0sQ0FBUCxhQUFBLEdBQXdCLFlBQUEsQ0FBQTtBQUF4QixHQUFWLENBQVAsQztBQUhXLENBRWIsQ0FGYSxFQUtiLGdCQUFBLFdBQUEsRUFBa0IsWUFBQTtTQUNoQixNQUFBLENBQU8sd0JBQVUsc0JBQWpCLENBQWlCLENBQVYsQ0FBUCxDO0FBTlcsQ0FLYixDQUxhLEVBUWIsZ0JBQUEsMkJBQUEsRUFBa0Msa0JBQUE7QUFDaEMsTUFBQSxDQUFBO0FBQUEsRUFBQSxDQUFBLEdBQUksQ0FBQSxFQUFKO0FBQ0EsRUFBQSxNQUFBLENBQU8sTUFBSyx1QkFBTSxNQUFNLHFCQUF4QixDQUF3QixDQUFaLEVBQVosQ0FBQTtBQUNBLEVBQUEsTUFBQSxDQUFPLE1BQUssdUJBQU0sTUFBTSxxQkFBeEIsQ0FBd0IsQ0FBWixFQUFaLENBQUE7U0FDQSxNQUFBLENBQU8sd0JBQU8sTUFBTSxxQkFBcEIsQ0FBb0IsQ0FBYixFQUFQLEM7QUFaVyxDQVFiLENBUmEsQyIsInNvdXJjZXNDb250ZW50IjpbImFzc2VydCA9IHJlcXVpcmUgXCJhc3NlcnRcIlxuaW1wb3J0IHt0ZXN0fSBmcm9tIFwiYW1lblwiXG5pbXBvcnQge2l0ZXJhdG9yLCBuZXh0LCB2YWx1ZSwgaXNEb25lfSBmcm9tIFwiLi4vc3JjL2l0ZXJhdG9yXCJcbmltcG9ydCB7aXNSZWFnZW50LCByZWFjdG9yLCBpc1JlYWN0b3J9IGZyb20gXCIuLi9zcmMvcmVhY3RvclwiXG5cbmYgPSAtPiB5aWVsZCB4IGZvciBhd2FpdCB4IGZyb20gWzEuLjJdXG5leHBvcnQgZGVmYXVsdCBbXG5cbiAgdGVzdCBcImlzUmVhZ2VudFwiLCAtPlxuICAgIGFzc2VydCBpc1JlYWdlbnQgW1N5bWJvbC5hc3luY0l0ZXJhdG9yXTogLT5cblxuICB0ZXN0IFwiaXNSZWFjdG9yXCIsIC0+XG4gICAgYXNzZXJ0IGlzUmVhY3RvciByZWFjdG9yIGZcblxuICB0ZXN0IFwicmVhY3Rvci9uZXh0L3ZhbHVlL2lzRG9uZVwiLCAtPlxuICAgIHIgPSBmKClcbiAgICBhc3NlcnQgMSA9PSB2YWx1ZSBhd2FpdCBuZXh0IHJcbiAgICBhc3NlcnQgMiA9PSB2YWx1ZSBhd2FpdCBuZXh0IHJcbiAgICBhc3NlcnQgaXNEb25lIGF3YWl0IG5leHQgclxuXG5dXG4iXSwic291cmNlUm9vdCI6IiJ9
//# sourceURL=/Users/dyoder/repos/panda-river/test/reactor.coffee