"use strict";

var _amen = require("amen");

var _iterator = _interopRequireDefault(require("./iterator"));

var _reactor = _interopRequireDefault(require("./reactor"));

var _adapters = _interopRequireDefault(require("./adapters"));

var _filters = _interopRequireDefault(require("./filters"));

var _reducers = _interopRequireDefault(require("./reducers"));

var _index = require("../src/index");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var i,
    len,
    modules,
    ref,
    target,
    targets,
    indexOf = [].indexOf;
// modules = { iterators, reactors, adapters, filters }
modules = {
  iterators: _iterator.default,
  reactors: _reactor.default,
  adapters: _adapters.default,
  filters: _filters.default,
  reducers: _reducers.default
};
targets = (ref = process.env.PANDA_RIVER_TARGETS) != null ? ref.split(/\s+/) : void 0;

if (targets == null) {
  targets = [];
}

for (i = 0, len = targets.length; i < len; i++) {
  target = targets[i];

  if (!(modules[target] == null)) {
    continue;
  }

  console.error(`invalid target: '${target}'`);
  process.exit(-1);
}

target = function (module) {
  return targets.length === 0 || indexOf.call(targets, module) >= 0;
};

(async function () {
  var module, name;
  (0, _amen.print)((await (0, _amen.test)("Panda River", function () {
    var results;
    results = [];

    for (name in modules) {
      module = modules[name];

      if (target(name)) {
        results.push((0, _amen.test)(name, module));
      }
    }

    return results;
  }())));
  return process.exit(_amen.success ? 0 : 1);
})();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtcml2ZXIvdGVzdC9pbmRleC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFDQTs7QUFHQTs7OztBQVJBLElBQUEsQ0FBQTtBQUFBLElBQUEsR0FBQTtBQUFBLElBQUEsT0FBQTtBQUFBLElBQUEsR0FBQTtBQUFBLElBQUEsTUFBQTtBQUFBLElBQUEsT0FBQTtBQUFBLElBQUEsT0FBQSxHQUFBLEdBQUEsT0FBQTs7QUFXQSxPQUFBLEdBQVU7QUFBRSxFQUFBLFNBQUYsRUFBRSxpQkFBRjtBQUFhLEVBQUEsUUFBYixFQUFhLGdCQUFiO0FBQXVCLEVBQUEsUUFBdkIsRUFBdUIsaUJBQXZCO0FBQWlDLEVBQUEsT0FBakMsRUFBaUMsZ0JBQWpDO0FBQTBDLEVBQUEsUUFBMUMsRUFBMEM7QUFBMUMsQ0FBVjtBQUNBLE9BQUEsR0FBQSxDQUFBLEdBQUEsR0FBQSxPQUFBLENBQUEsR0FBQSxDQUFBLG1CQUFBLEtBQUEsSUFBQSxHQUFBLEdBQXlDLENBQS9CLEtBQVYsQ0FBVSxLQUFWLENBQUEsR0FBVSxLQUFBLENBQVY7OztBQUNBLEVBQUEsT0FBQSxHQUFXLEVBQVg7OztBQUVBLEtBQUEsQ0FBQSxHQUFBLENBQUEsRUFBQSxHQUFBLEdBQUEsT0FBQSxDQUFBLE1BQUEsRUFBQSxDQUFBLEdBQUEsR0FBQSxFQUFBLENBQUEsRUFBQSxFQUFBOzs7UUFBNEIsT0FBQSxDQUFBLE1BQUEsQ0FBQSxJQUFBLEksR0FBQTs7OztBQUMxQixFQUFBLE9BQU8sQ0FBUCxLQUFBLENBQWMsb0JBQUEsTUFBZCxHQUFBO0FBQ0EsRUFBQSxPQUFPLENBQVAsSUFBQSxDQUFhLENBQWIsQ0FBQTtBQUZGOztBQUlBLE1BQUEsR0FBUyxVQUFBLE1BQUEsRUFBQTtTQUFZLE9BQU8sQ0FBUCxNQUFBLEtBQUEsQ0FBQSxJQUF3QixPQUFBLENBQUEsSUFBQSxDQUFBLE9BQUEsRUFBQSxNQUFBLEtBQUQsQztBQUFuQyxDQUFUOztBQUVHLENBQUEsa0JBQUE7QUFDRCxNQUFBLE1BQUEsRUFBQSxJQUFBO0FBQUEsb0JBQU0sTUFBTSxnQkFBQSxhQUFBLEVBQUEsWUFBQTs7QUFDVSxJQUFBLE9BQUEsR0FBQSxFQUFBOztBQUFBLFNBQUEsSUFBQSxJQUFBLE9BQUEsRUFBQTs7O1VBQWlDLE1BQUEsQ0FBQSxJQUFBLEMsRUFBQTtxQkFBcEQsZ0JBQUEsSUFBQSxFQUFBLE1BQUEsQzs7QUFBbUI7OztBQUR0QixHQUFZLEVBQUEsQ0FBWjtTQUdBLE9BQU8sQ0FBUCxJQUFBLENBQWEsZ0JBQUEsQ0FBQSxHQUFiLENBQUEsQztBQUpGLENBQUciLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge3ByaW50LCB0ZXN0LCBzdWNjZXNzfSBmcm9tIFwiYW1lblwiXG5pbXBvcnQge2RlZmF1bHQgYXMgaXRlcmF0b3JzfSBmcm9tIFwiLi9pdGVyYXRvclwiXG5pbXBvcnQge2RlZmF1bHQgYXMgcmVhY3RvcnN9IGZyb20gXCIuL3JlYWN0b3JcIlxuaW1wb3J0IHtkZWZhdWx0IGFzIGFkYXB0ZXJzfSBmcm9tIFwiLi9hZGFwdGVyc1wiXG5pbXBvcnQge2RlZmF1bHQgYXMgZmlsdGVyc30gZnJvbSBcIi4vZmlsdGVyc1wiXG5pbXBvcnQge2RlZmF1bHQgYXMgcmVkdWNlcnN9IGZyb20gXCIuL3JlZHVjZXJzXCJcblxuIyB0ZXN0IHRvIG1ha2Ugc3VyZSB0b3AtbGV2ZWwgaW1wb3J0IHdvcmtzXG5pbXBvcnQge2l0ZXJhdG9yfSBmcm9tIFwiLi4vc3JjL2luZGV4XCJcblxuIyBtb2R1bGVzID0geyBpdGVyYXRvcnMsIHJlYWN0b3JzLCBhZGFwdGVycywgZmlsdGVycyB9XG5tb2R1bGVzID0geyBpdGVyYXRvcnMsIHJlYWN0b3JzLCBhZGFwdGVycywgZmlsdGVycywgcmVkdWNlcnMgfVxudGFyZ2V0cyA9IHByb2Nlc3MuZW52LlBBTkRBX1JJVkVSX1RBUkdFVFM/LnNwbGl0IC9cXHMrL1xudGFyZ2V0cyA/PSBbXVxuXG5mb3IgdGFyZ2V0IGluIHRhcmdldHMgd2hlbiAhbW9kdWxlc1t0YXJnZXRdP1xuICBjb25zb2xlLmVycm9yIFwiaW52YWxpZCB0YXJnZXQ6ICcje3RhcmdldH0nXCJcbiAgcHJvY2Vzcy5leGl0IC0xXG5cbnRhcmdldCA9IChtb2R1bGUpIC0+IHRhcmdldHMubGVuZ3RoID09IDAgfHwgKG1vZHVsZSBpbiB0YXJnZXRzKVxuXG5kbyAtPlxuICBwcmludCBhd2FpdCB0ZXN0IFwiUGFuZGEgUml2ZXJcIixcbiAgICAodGVzdCBuYW1lLCBtb2R1bGUpIGZvciBuYW1lLCBtb2R1bGUgb2YgbW9kdWxlcyB3aGVuIHRhcmdldCBuYW1lXG5cbiAgcHJvY2Vzcy5leGl0IGlmIHN1Y2Nlc3MgdGhlbiAwIGVsc2UgMVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/dyoder/repos/panda-river/test/index.coffee