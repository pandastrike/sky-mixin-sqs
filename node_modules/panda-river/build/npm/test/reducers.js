"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _assert = _interopRequireDefault(require("assert"));

var _amen = require("amen");

var _pandaGarden = require("panda-garden");

var _pandaParchment = require("panda-parchment");

var _reducers = require("../src/reducers");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _awaitAsyncGenerator(value) { return new _AwaitValue(value); }

function _wrapAsyncGenerator(fn) { return function () { return new _AsyncGenerator(fn.apply(this, arguments)); }; }

function _AsyncGenerator(gen) { var front, back; function send(key, arg) { return new Promise(function (resolve, reject) { var request = { key: key, arg: arg, resolve: resolve, reject: reject, next: null }; if (back) { back = back.next = request; } else { front = back = request; resume(key, arg); } }); } function resume(key, arg) { try { var result = gen[key](arg); var value = result.value; var wrappedAwait = value instanceof _AwaitValue; Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) { if (wrappedAwait) { resume("next", arg); return; } settle(result.done ? "return" : "normal", arg); }, function (err) { resume("throw", err); }); } catch (err) { settle("throw", err); } } function settle(type, value) { switch (type) { case "return": front.resolve({ value: value, done: true }); break; case "throw": front.reject(value); break; default: front.resolve({ value: value, done: false }); break; } front = front.next; if (front) { resume(front.key, front.arg); } else { back = null; } } this._invoke = send; if (typeof gen.return !== "function") { this.return = undefined; } }

if (typeof Symbol === "function" && Symbol.asyncIterator) { _AsyncGenerator.prototype[Symbol.asyncIterator] = function () { return this; }; }

_AsyncGenerator.prototype.next = function (arg) { return this._invoke("next", arg); };

_AsyncGenerator.prototype.throw = function (arg) { return this._invoke("throw", arg); };

_AsyncGenerator.prototype.return = function (arg) { return this._invoke("return", arg); };

function _AwaitValue(value) { this.wrapped = value; }

function _asyncIterator(iterable) { var method; if (typeof Symbol === "function") { if (Symbol.asyncIterator) { method = iterable[Symbol.asyncIterator]; if (method != null) return method.call(iterable); } if (Symbol.iterator) { method = iterable[Symbol.iterator]; if (method != null) return method.call(iterable); } } throw new TypeError("Object is not async iterable"); }

var spec;

spec = function (name, {
  expected,
  reducer,
  iterable
}) {
  return (0, _amen.test)(name, [(0, _amen.test)("iterator", function () {
    return _assert.default.deepEqual(expected, reducer(iterable));
  }), (0, _amen.test)("reactor", async function () {
    var r;

    r =
    /*#__PURE__*/
    function () {
      var _ref = _wrapAsyncGenerator(function* () {
        var results, x;
        results = [];
        var _iteratorNormalCompletion = true;
        var _didIteratorError = false;

        var _iteratorError;

        try {
          for (var _iterator = _asyncIterator(iterable), _step, _value; _step = yield _awaitAsyncGenerator(_iterator.next()), _iteratorNormalCompletion = _step.done, _value = yield _awaitAsyncGenerator(_step.value), !_iteratorNormalCompletion; _iteratorNormalCompletion = true) {
            x = _value;
            results.push((yield x));
          }
        } catch (err) {
          _didIteratorError = true;
          _iteratorError = err;
        } finally {
          try {
            if (!_iteratorNormalCompletion && _iterator.return != null) {
              yield _awaitAsyncGenerator(_iterator.return());
            }
          } finally {
            if (_didIteratorError) {
              throw _iteratorError;
            }
          }
        }

        return results;
      });

      return function r() {
        return _ref.apply(this, arguments);
      };
    }();

    return _assert.default.deepEqual(expected, (await reducer(r)));
  })]);
};

var _default = [spec("collect", {
  iterable: [1, 2, 3, 4, 5],
  expected: [1, 2, 3, 4, 5],
  reducer: _reducers.collect
}), spec("each", {
  iterable: [1, 2, 3, 4, 5],
  expected: void 0,
  reducer: (0, _reducers.each)(function (y) {
    return function (x) {
      (0, _assert.default)(x === y);
      return y = y % 5 + 1;
    };
  }(1))
}), spec("fold/reduce", {
  iterable: [1, 2, 3, 4, 5],
  expected: 15,
  reducer: (0, _reducers.fold)(_pandaParchment.add, 0)
}), spec("foldr/reduceRight", {
  iterable: "panama",
  expected: "amanap",
  reducer: (0, _reducers.foldr)(_pandaParchment.add, "")
}), spec("any", {
  iterable: [1, 2, 3, 4, 5],
  expected: true,
  reducer: (0, _reducers.any)(_pandaParchment.odd)
}), spec("all", {
  iterable: [1, 2, 3, 4, 5],
  expected: false,
  reducer: (0, _reducers.all)(_pandaParchment.odd)
}), spec("sum", {
  iterable: [1, 2, 3, 4, 5],
  expected: 15,
  reducer: _reducers.sum
}), spec("average", {
  iterable: [1, 2, 3, 4, 5],
  expected: 3,
  reducer: _reducers.average
}), spec("delimit", {
  iterable: ["one", "two", "three"],
  expected: "one, two, three",
  reducer: (0, _reducers.delimit)(", ")
})];
exports.default = _default;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9keW9kZXIvcmVwb3MvcGFuZGEtcml2ZXIvdGVzdC9yZWR1Y2Vycy5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBOztBQUNBOztBQUVBOztBQUNBOztBQUVBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBTkEsSUFBQSxJQUFBOztBQVNBLElBQUEsR0FBTyxVQUFBLElBQUEsRUFBTztBQUFBLEVBQUEsUUFBQTtBQUFBLEVBQUEsT0FBQTtBQUFQLEVBQUE7QUFBTyxDQUFQLEVBQUE7U0FFTCxnQkFBQSxJQUFBLEVBQVcsQ0FDVCxnQkFBQSxVQUFBLEVBQWlCLFlBQUE7V0FDZixnQkFBQSxTQUFBLENBQUEsUUFBQSxFQUEyQixPQUFBLENBQTNCLFFBQTJCLENBQTNCLEM7QUFGTyxHQUNULENBRFMsRUFJVCxnQkFBQSxTQUFBLEVBQWdCLGtCQUFBO0FBQ2QsUUFBQSxDQUFBOztBQUFBLElBQUEsQ0FBQTtBQUFBO0FBQUE7QUFBQSxxQ0FBSSxhQUFBO0FBQUcsWUFBQSxPQUFBLEVBQUEsQ0FBQTtBQUFRLFFBQUEsT0FBQSxHQUFBLEVBQUE7QUFBWDtBQUFBOztBQUFBOztBQUFBO0FBQVcsOENBQUEsUUFBQSxnT0FBQTtBQUFBLFlBQUEsQ0FBQTtvQkFBUixJLEVBQUEsTUFBQSxDO0FBQVE7QUFBWDtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBOzs7QUFBQSxPQUFKOztBQUFBO0FBQUE7QUFBQTtBQUFBLE9BQUE7O1dBQ0EsZ0JBQUEsU0FBQSxDQUFBLFFBQUEsR0FBMkIsTUFBTSxPQUFBLENBQWpDLENBQWlDLENBQWpDLEU7QUFOTyxHQUlULENBSlMsQ0FBWCxDO0FBRkssQ0FBUDs7ZUFXZSxDQUViLElBQUEsQ0FBQSxTQUFBLEVBQ0U7QUFBQSxFQUFBLFFBQUEsRUFBVSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBVixDQUFVLENBQVY7QUFDQSxFQUFBLFFBQUEsRUFBVSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFEVixDQUNVLENBRFY7QUFFQSxFQUFBLE9BQUEsRUFBUztBQUZULENBREYsQ0FGYSxFQU9iLElBQUEsQ0FBQSxNQUFBLEVBQ0U7QUFBQSxFQUFBLFFBQUEsRUFBVSxDQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBLENBQUEsRUFBVixDQUFVLENBQVY7QUFDQSxFQUFBLFFBQUEsRUFBVSxLQURWLENBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUyxvQkFBUSxVQUFBLENBQUEsRUFBQTtXQUNmLFVBQUEsQ0FBQSxFQUFBO0FBQ0UsMkJBQU8sQ0FBQSxLQUFQLENBQUE7YUFDQSxDQUFBLEdBQUssQ0FBQSxHQUFELENBQUEsR0FBVSxDO0FBRmhCLEs7QUFEWSxHQUFHLENBQVIsQ0FBUSxDQUFSO0FBRlQsQ0FERixDQVBhLEVBZWIsSUFBQSxDQUFBLGFBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFWLENBQVUsQ0FBVjtBQUNBLEVBQUEsUUFBQSxFQURBLEVBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUyxvQkFBQSxtQkFBQSxFQUFBLENBQUE7QUFGVCxDQURGLENBZmEsRUFvQmIsSUFBQSxDQUFBLG1CQUFBLEVBQ0U7QUFBQSxFQUFBLFFBQUEsRUFBQSxRQUFBO0FBQ0EsRUFBQSxRQUFBLEVBREEsUUFBQTtBQUVBLEVBQUEsT0FBQSxFQUFTLHFCQUFBLG1CQUFBLEVBQUEsRUFBQTtBQUZULENBREYsQ0FwQmEsRUF5QmIsSUFBQSxDQUFBLEtBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFWLENBQVUsQ0FBVjtBQUNBLEVBQUEsUUFBQSxFQURBLElBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUyxtQkFBQSxtQkFBQTtBQUZULENBREYsQ0F6QmEsRUE4QmIsSUFBQSxDQUFBLEtBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFWLENBQVUsQ0FBVjtBQUNBLEVBQUEsUUFBQSxFQURBLEtBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUyxtQkFBQSxtQkFBQTtBQUZULENBREYsQ0E5QmEsRUFtQ2IsSUFBQSxDQUFBLEtBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFWLENBQVUsQ0FBVjtBQUNBLEVBQUEsUUFBQSxFQURBLEVBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUztBQUZULENBREYsQ0FuQ2EsRUF3Q2IsSUFBQSxDQUFBLFNBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsQ0FBQSxFQUFBLENBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFWLENBQVUsQ0FBVjtBQUNBLEVBQUEsUUFBQSxFQURBLENBQUE7QUFFQSxFQUFBLE9BQUEsRUFBUztBQUZULENBREYsQ0F4Q2EsRUE2Q2IsSUFBQSxDQUFBLFNBQUEsRUFDRTtBQUFBLEVBQUEsUUFBQSxFQUFVLENBQUEsS0FBQSxFQUFBLEtBQUEsRUFBVixPQUFVLENBQVY7QUFDQSxFQUFBLFFBQUEsRUFEQSxpQkFBQTtBQUVBLEVBQUEsT0FBQSxFQUFTLHVCQUFBLElBQUE7QUFGVCxDQURGLENBN0NhLEMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgYXNzZXJ0IGZyb20gXCJhc3NlcnRcIlxuaW1wb3J0IHt0ZXN0fSBmcm9tIFwiYW1lblwiXG5cbmltcG9ydCB7aWRlbnRpdHl9IGZyb20gXCJwYW5kYS1nYXJkZW5cIlxuaW1wb3J0IHtmaXJzdCwgYWRkLCBvZGQsIHB1c2gsIHd9IGZyb20gXCJwYW5kYS1wYXJjaG1lbnRcIlxuXG5pbXBvcnQge3JlZHVjZSwgZm9sZCwgZm9sZHIsIGNvbGxlY3QsIGVhY2gsIHN0YXJ0LCBhbnksIGFsbCxcbiAgc3VtLCBhdmVyYWdlLCBkZWxpbWl0fSBmcm9tIFwiLi4vc3JjL3JlZHVjZXJzXCJcblxuc3BlYyA9IChuYW1lLCB7ZXhwZWN0ZWQsIHJlZHVjZXIsIGl0ZXJhYmxlfSkgLT5cblxuICB0ZXN0IG5hbWUsIFtcbiAgICB0ZXN0IFwiaXRlcmF0b3JcIiwgLT5cbiAgICAgIGFzc2VydC5kZWVwRXF1YWwgZXhwZWN0ZWQsIHJlZHVjZXIgaXRlcmFibGVcblxuICAgIHRlc3QgXCJyZWFjdG9yXCIsIC0+XG4gICAgICByID0gLT4geWllbGQgeCBmb3IgYXdhaXQgeCBmcm9tIGl0ZXJhYmxlXG4gICAgICBhc3NlcnQuZGVlcEVxdWFsIGV4cGVjdGVkLCBhd2FpdCByZWR1Y2VyIHJcbiAgXVxuXG5leHBvcnQgZGVmYXVsdCBbXG5cbiAgc3BlYyBcImNvbGxlY3RcIixcbiAgICBpdGVyYWJsZTogWzEuLjVdXG4gICAgZXhwZWN0ZWQ6IFsxLi41XVxuICAgIHJlZHVjZXI6IGNvbGxlY3RcblxuICBzcGVjIFwiZWFjaFwiLFxuICAgIGl0ZXJhYmxlOiBbMS4uNV1cbiAgICBleHBlY3RlZDogdW5kZWZpbmVkXG4gICAgcmVkdWNlcjogZWFjaCBkbyAoeT0xKSAtPlxuICAgICAgKHgpIC0+XG4gICAgICAgIGFzc2VydCB4ID09IHlcbiAgICAgICAgeSA9ICh5ICUgNSkgKyAxXG5cbiAgc3BlYyBcImZvbGQvcmVkdWNlXCIsXG4gICAgaXRlcmFibGU6IFsxLi41XVxuICAgIGV4cGVjdGVkOiAxNVxuICAgIHJlZHVjZXI6IGZvbGQgYWRkLCAwXG5cbiAgc3BlYyBcImZvbGRyL3JlZHVjZVJpZ2h0XCIsXG4gICAgaXRlcmFibGU6IFwicGFuYW1hXCJcbiAgICBleHBlY3RlZDogXCJhbWFuYXBcIlxuICAgIHJlZHVjZXI6IGZvbGRyIGFkZCwgXCJcIlxuXG4gIHNwZWMgXCJhbnlcIixcbiAgICBpdGVyYWJsZTogWzEuLjVdXG4gICAgZXhwZWN0ZWQ6IHRydWVcbiAgICByZWR1Y2VyOiBhbnkgb2RkXG5cbiAgc3BlYyBcImFsbFwiLFxuICAgIGl0ZXJhYmxlOiBbMS4uNV1cbiAgICBleHBlY3RlZDogZmFsc2VcbiAgICByZWR1Y2VyOiBhbGwgb2RkXG5cbiAgc3BlYyBcInN1bVwiLFxuICAgIGl0ZXJhYmxlOiBbMS4uNV1cbiAgICBleHBlY3RlZDogMTVcbiAgICByZWR1Y2VyOiBzdW1cblxuICBzcGVjIFwiYXZlcmFnZVwiLFxuICAgIGl0ZXJhYmxlOiBbMS4uNV1cbiAgICBleHBlY3RlZDogM1xuICAgIHJlZHVjZXI6IGF2ZXJhZ2VcblxuICBzcGVjIFwiZGVsaW1pdFwiLFxuICAgIGl0ZXJhYmxlOiBbIFwib25lXCIsIFwidHdvXCIsIFwidGhyZWVcIiBdXG4gICAgZXhwZWN0ZWQ6IFwib25lLCB0d28sIHRocmVlXCJcbiAgICByZWR1Y2VyOiBkZWxpbWl0IFwiLCBcIlxuXVxuIl0sInNvdXJjZVJvb3QiOiIifQ==
//# sourceURL=/Users/dyoder/repos/panda-river/test/reducers.coffee