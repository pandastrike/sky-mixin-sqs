// Generated by CoffeeScript 1.12.4
(function() {
  var blank, camelCase, capitalize, compose, curry, dashed, htmlEscape, isMatch, match, plainText, ref, replace, split, titleCase, toLower, toString, toUpper, trim, underscored, w;

  ref = require("fairmont-core"), curry = ref.curry, compose = ref.compose;

  toString = function(x) {
    return x.toString();
  };

  toUpper = function(s) {
    return s.toUpperCase();
  };

  toLower = function(s) {
    return s.toLowerCase();
  };

  plainText = function(string) {
    return string.replace(/^[A-Z]/g, function(c) {
      return c.toLowerCase();
    }).replace(/[A-Z]/g, function(c) {
      return " " + (c.toLowerCase());
    }).replace(/\W+/g, " ");
  };

  capitalize = function(string) {
    return string[0].toUpperCase() + string.slice(1);
  };

  titleCase = function(string) {
    return string.toLowerCase().replace(/^(\w)|\W(\w)/g, function(char) {
      return char.toUpperCase();
    });
  };

  camelCase = function(string) {
    return string.toLowerCase().replace(/(\W+\w)/g, function(string) {
      return string.trim().toUpperCase();
    });
  };

  underscored = function(string) {
    return plainText(string).replace(/\W+/g, "_");
  };

  dashed = function(string) {
    return plainText(string).replace(/\W+/g, "-");
  };

  htmlEscape = (function() {
    var entities, map, re;
    map = {
      "&": "&amp;",
      "<": "&lt;",
      ">": "&gt;",
      '"': '&quot;',
      "'": '&#39;',
      "/": '&#x2F;'
    };
    entities = Object.keys(map);
    re = new RegExp("" + (entities.join('|')), "g");
    return function(string) {
      return string.replace(re, function(s) {
        return map[s];
      });
    };
  })();

  trim = function(s) {
    return s.trim();
  };

  split = curry(function(re, s) {
    return s.split(re);
  });

  w = compose(split(/\s+/), trim);

  blank = function(s) {
    return s.length === 0;
  };

  match = curry(function(pattern, string) {
    return string.match(pattern);
  });

  isMatch = curry(function(pattern, string) {
    return pattern.test(string);
  });

  replace = curry(function(pattern, replacement, string) {
    return string.replace(pattern, replacement);
  });

  module.exports = {
    toString: toString,
    toUpper: toUpper,
    toLower: toLower,
    capitalize: capitalize,
    titleCase: titleCase,
    camelCase: camelCase,
    underscored: underscored,
    dashed: dashed,
    plainText: plainText,
    htmlEscape: htmlEscape,
    split: split,
    w: w,
    blank: blank,
    match: match,
    isMatch: isMatch,
    replace: replace
  };

}).call(this);
